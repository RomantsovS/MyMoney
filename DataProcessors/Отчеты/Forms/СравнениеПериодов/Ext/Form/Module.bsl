#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	ОтчетыСКД.ПриСозданииНаСервере(ЭтотОбъект);
	
	ПодготовитьФормуНаСервере();
	
КонецПроцедуры

&НаКлиенте
Процедура ПередЗакрытием(Отказ, ЗавершениеРаботы, ТекстПредупреждения, СтандартнаяОбработка)
	Если Элементы.ГруппаСтраницы.ТекущаяСтраница = Элементы.ГруппаДиаграммы И ТекУровеньГруппировки > 0 Тогда 
		Отказ = Истина;
		СтандартнаяОбработка = Ложь;
		
		ПередЗакрытиемНаСервере();
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура ПриЗакрытии(ЗавершениеРаботы)
	
	Если ЗавершениеРаботы Тогда 
		Отказ = Истина;
		Возврат;
	КонецЕсли;
	
	ПриЗакрытииНаСервере();
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовФормы

&НаКлиенте
Процедура Группа2ПриСменеСтраницы(Элемент, ТекущаяСтраница)
	ОбновитьТекущуюСтраницу();
КонецПроцедуры

&НаКлиенте
Процедура ДиаграммаРасходыОбработкаРасшифровки(Элемент, Расшифровка, СтандартнаяОбработка)
	СтандартнаяОбработка = ложь;
	
	ПоказатьПредупреждение(, "" + Расшифровка.статья + " " + Расшифровка.сумма);
	//
	//Если типзнч(расшифровка) = тип("Структура") Тогда 
	//	Если расшифровка.номер = 1 Тогда 
	//		парам = новый Структура("ОтборПоСтатье, ОтборПоПериоду", расшифровка.измерение, новый Структура("НачалоПериода, КонецПериода",
	//		Период1.ДатаНачала, Период1.ДатаОкончания));
	//	Иначе
	//		парам = новый Структура("ОтборПоСтатье, ОтборПоПериоду", расшифровка.измерение, новый Структура("НачалоПериода, КонецПериода",
	//		Период2.ДатаНачала, Период2.ДатаОкончания));
	//	КонецЕсли;
	//Иначе
	//	парам = новый Структура("ОтборПоСтатье, ОтборПоПериоду", Расшифровка, новый Структура("НачалоПериода, КонецПериода",
	//	Период1.ДатаНачала, Период1.ДатаОкончания));
	//КонецЕсли;
	//
	//Если ОтборКошелек.Количество() > 0 Тогда 
	//	парам.Вставить("ОтборПоКошельку", ОтборКошелек.ВыгрузитьЗначения());
	//КонецЕсли;
	//
	//Если ОтборВалюта.Количество() > 0 Тогда 
	//	парам.Вставить("ОтборПоВалюте", ОтборВалюта.ВыгрузитьЗначения());
	//КонецЕсли;
	//
	//Если ОтборМетка.Количество() > 0 Тогда 
	//	парам.Вставить("ОтборПоМетке", ОтборМетка.ВыгрузитьЗначения());
	//КонецЕсли;
	//
	//ОткрытьФорму("Документ.Операция.ФормаСписка", парам, ЭтаФорма);
КонецПроцедуры

&НаКлиенте
Процедура ДиаграммаРасходыВыбор(Элемент, ЗначениеДиаграммы, СтандартнаяОбработка)
	КомпоновкаДанныхКлиент.ДиаграммаВыбор(ЭтотОбъект, Элемент, ЗначениеДиаграммы, СтандартнаяОбработка);
КонецПроцедуры

&НаКлиенте
Процедура ТабДокОбработкаРасшифровки(Элемент, Расшифровка, СтандартнаяОбработка)
	
	КомпоновкаДанныхКлиент.ОбработкаРасшифровки(ЭтотОбъект, Элемент, Расшифровка, АдресДанныхРасшифровкиОтчет, СтандартнаяОбработка);
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура ПроверитьЗначенияДиаграммы(Команда)
	ПроверитьЗначенияДиаграммыНаСервере();
КонецПроцедуры

&НаКлиенте
Процедура ПеревернутьДиаграмму(Команда)
	
	ДиаграммаПеревернута = Не ДиаграммаПеревернута;
	
	ОбновитьДиаграммуСервер();
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаСервере
Процедура НастроитьОформлениеДиаграммы()
	ШрифтПодписей = Новый Шрифт(ШрифтыСтиля.МелкийШрифтТекста);
	
	ДиаграммаРеквизит.ШрифтПодписей = ШрифтПодписей;
	
	ДиаграммаРеквизит.ОбластьПостроения.Шрифт = ШрифтПодписей;
	ДиаграммаРеквизит.ОбластьПостроения.Верх = 0;
	ДиаграммаРеквизит.ОбластьПостроения.Лево = 0;
	ДиаграммаРеквизит.ОбластьПостроения.Низ = 1;
	ДиаграммаРеквизит.ОбластьПостроения.Право = 1;
	
	ДиаграммаРеквизит.ОбластьПостроения.ЦветШкалы = WebЦвета.Черный;
	
	ДиаграммаРеквизит.ФорматЗначенийВПодписях  = "ЧДЦ=2; ЧРГ=.";
КонецПроцедуры

&НаСервере
Процедура ПодготовитьФормуНаСервере()
	
	КлючОбъекта = Метаданные.Обработки.Отчеты.Имя + ЭтаФорма.ИмяФормы;
	
	ТекУровеньГруппировки = 0;
	
	НастроитьОформлениеДиаграммы();
	
	ОбщиеНастройкиВызовСервера.ЗагрузитьОсновнуюНастройку(ЭтотОбъект);
	
	ОбновитьТекущуюСтраницу();
	
	НеНастраиватьВыбор = Истина;
	
КонецПроцедуры

&НаСервере
Процедура ОбновитьТекущуюСтраницу() Экспорт 
	Если Элементы.ГруппаСтраницы.ТекущаяСтраница = Элементы.ГруппаДиаграммы Тогда
		Если Не ДиаграммаСформирована Тогда 
			ОбновитьДиаграммуСервер();
		КонецЕсли;
	Иначе
		Если Не ОтчетСформирован Тогда 
			ОбновитьСерверСКД();
		КонецЕсли;
	КонецЕсли;
КонецПроцедуры

&НаСервере
Процедура ОбновитьСерверСКД()
	
	ТабДок.Очистить();
	
	СхемаКомпоновкиДанных = ПолучитьИзВременногоХранилища(ЭтотОбъект.АдресСКД);
	
	ОтчетыСКД.ПолучитьДанныеОтчета(СхемаКомпоновкиДанных, ТабДок, Неопределено, УникальныйИдентификатор, Неопределено,
	АдресДанныхРасшифровкиОтчет, Истина, ЭтотОбъект.АдресНастроекСКД);
	
	ОтчетСформирован = Истина;
	
	#Если МобильноеПриложениеСервер Тогда
	#Иначе		
		Элементы.ТабДок.ОтображатьГруппировки = Истина;
	#КонецЕсли
	
КонецПроцедуры

&НаСервере
Процедура ОбновитьДиаграммуСервер()
	
	СхемаКомпоновкиДанных = ПолучитьИзВременногоХранилища(ЭтотОбъект.АдресСКД);
	
	СтруктураКомпоновки = Новый ТаблицаЗначений;
	СтруктураКомпоновки.Колонки.Добавить("Поле", Новый ОписаниеТипов("Строка"));
	СтруктураКомпоновки.Колонки.Добавить("Использование");
	
	ПараметрыКомпоновки = Новый Структура("Период1, Период2");
	
	ОтчетыСКД.ПолучитьПараметрыНастроекСКД(СхемаКомпоновкиДанных, ЭтотОбъект.АдресНастроекСКД, СтруктураКомпоновки, ,
	ПараметрыКомпоновки);
	
	ДиаграммаРеквизит.Очистить();
	ДиаграммаРеквизит.Обновление = Ложь;
	
	ПорядокИтоговОбработанный = СтруктураКомпоновки.НайтиСтроки(Новый Структура("Использование", Истина));
	
	МаксУровеньГруппировки = ПорядокИтоговОбработанный.Количество();
	
	Если ПорядокИтоговОбработанный.Количество() > 0 Тогда			
		ПорядокИтоговНов = Новый ТаблицаЗначений;
		ПорядокИтоговНов.Колонки.Добавить("Поле");
		ПорядокИтоговНов.Колонки.Добавить("Использование");
		
		СтрПолеИтог = ПорядокИтоговОбработанный[ТекУровеньГруппировки];
			
		НовСтр = ПорядокИтоговНов.Добавить();
		НовСтр.Поле = СтрПолеИтог.Поле;		
		НовСтр.Использование = Истина;
		
		СтруктураПараметров = ПолучитьСтруктуруПараметров();
		
		ДанныеОтчета = Новый ДеревоЗначений;
		ОтчетыСКД.ПолучитьДанныеОтчета(СхемаКомпоновкиДанных, ДанныеОтчета, ПорядокИтоговНов, УникальныйИдентификатор,
		СтруктураПараметров, АдресДанныхРасшифровкиДиаграмма, Ложь, ЭтотОбъект.АдресНастроекСКД);
		
		ТекЗаголовок = "";
		//
		//Для Индекс = 0 по ТекУровеньГруппировки - 1 Цикл
		//	Если ПорядокИтоговОбработанный[Индекс].Поле = "Валюта" Тогда 
		//		ТекЗаголовок = ТекЗаголовок + "/" + ОтборВалюта1[0].Значение;
		//	ИначеЕсли ПорядокИтоговОбработанный[Индекс].Поле = "Кошелек" Тогда 
		//		ТекЗаголовок = ТекЗаголовок + "/" + ОтборКошелек1[0].Значение;
		//	ИначеЕсли ПорядокИтоговОбработанный[Индекс].Поле = "Метка" Тогда 
		//		ТекЗаголовок = ТекЗаголовок + "/" + ОтборМетка1[0].Значение;
		//	ИначеЕсли ПорядокИтоговОбработанный[Индекс].Поле = "Статья" Тогда 
		//		ТекЗаголовок = ТекЗаголовок + "/" + ОтборСтатья1[0].Значение;
		//	ИначеЕсли ПорядокИтоговОбработанный[Индекс].Поле = "ТипОперации" Тогда 
		//		ТекЗаголовок = ТекЗаголовок + "/" + ОтборТипОперации1[0].Значение;
		//	КонецЕсли;
		//КонецЦикла;
		
		Элементы.ДиаграммаРасходы.Заголовок = Заголовок + ТекЗаголовок;
		
		Если ДиаграммаПеревернута Тогда 
			ТочкаСерия1 = ДиаграммаРеквизит.Серии.Добавить("Период1");
		Иначе
			ТочкаСерия1 = ДиаграммаРеквизит.Точки.Добавить("Период1");
		КонецЕсли;
		
		ТочкаСерия1.Значение = "Период1";
		ТочкаСерия1.Текст = Формат(ПараметрыКомпоновки.Период1.ДатаНачала, "ДФ=dd.MM.yyyy") + "-" + Формат(ПараметрыКомпоновки.Период1.ДатаОкончания, "ДФ=dd.MM.yyyy");
		
		Если ДиаграммаПеревернута Тогда 
			ТочкаСерия2 = ДиаграммаРеквизит.Серии.Добавить("Период2");
		Иначе
			ТочкаСерия2 = ДиаграммаРеквизит.Точки.Добавить("Период2");
		КонецЕсли;
		ТочкаСерия2.Значение = "Период2";
		ТочкаСерия2.Текст = Формат(ПараметрыКомпоновки.Период2.ДатаНачала, "ДФ=dd.MM.yyyy") + "-" + Формат(ПараметрыКомпоновки.Период2.ДатаОкончания, "ДФ=dd.MM.yyyy");
		
		Для Каждого Стр Из ДанныеОтчета.Строки Цикл
			Если ДиаграммаПеревернута Тогда 
				Серия = ДиаграммаРеквизит.Точки.Добавить(Строка(Стр[СтрПолеИтог.Поле]));
				
				Серия.Значение = Стр[СтрПолеИтог.Поле];
				
				ДиаграммаРеквизит.УстановитьЗначение(Серия, ТочкаСерия1, ?(Стр.Сумма1 < 0, -Стр.Сумма1, Стр.Сумма1),
				Новый Структура("Статья, Сумма", Стр[СтрПолеИтог.Поле], Стр.Сумма1));
				
				ДиаграммаРеквизит.УстановитьЗначение(Серия, ТочкаСерия2, ?(Стр.Сумма2 < 0, -Стр.Сумма2, Стр.Сумма2),
				Новый Структура("Статья, Сумма", Стр[СтрПолеИтог.Поле], Стр.Сумма2));
			Иначе
				Серия = ДиаграммаРеквизит.Серии.Добавить(Строка(Стр[СтрПолеИтог.Поле]));
				
				Серия.Значение = Стр[СтрПолеИтог.Поле];
				
				ДиаграммаРеквизит.УстановитьЗначение(ТочкаСерия1, Серия, ?(Стр.Сумма1 < 0, -Стр.Сумма1, Стр.Сумма1),
				Новый Структура("Статья, Сумма", Стр[СтрПолеИтог.Поле], Стр.Сумма1));
				
				ДиаграммаРеквизит.УстановитьЗначение(ТочкаСерия2, Серия, ?(Стр.Сумма2 < 0, -Стр.Сумма2, Стр.Сумма2),
				Новый Структура("Статья, Сумма", Стр[СтрПолеИтог.Поле], Стр.Сумма2));
			КонецЕсли;
		КонецЦикла;
		
		ДиаграммаРеквизит.Обновление = Истина;
		
		Элементы.СтраницыДиаграмм.ТекущаяСтраница = Элементы.СтраницаОстатки;		
	Иначе
		Элементы.СтраницыДиаграмм.ТекущаяСтраница = Элементы.СтраницаНетДанных;
	КонецЕсли;
	
	ДиаграммаСформирована = Истина;
КонецПроцедуры

&НаСервере
Функция ПолучитьСтруктуруПараметров()
	
	СтруктураПараметров = Новый Структура;
	
	Возврат СтруктураПараметров;
	
КонецФункции

&НаСервере
Процедура ВыбратьНастройкуЗавершениеСервер() Экспорт 
	
	ОбщиеНастройкиВызовСервера.ВыбратьНастройкуЗавершениеСервер(ЭтотОбъект);
	
КонецПроцедуры

&НаСервере
Процедура ПроверитьЗначенияДиаграммыНаСервере()
	Для Каждого стрТочка из ДиаграммаРеквизит.Точки Цикл
		Для Каждого стрСерия из ДиаграммаРеквизит.Серии Цикл
			значДиаграммы = ДиаграммаРеквизит.ПолучитьЗначение(стрТочка, стрСерия);
			
			Сообщить("" + значДиаграммы.серия.текст + " " + значДиаграммы.точка.текст + " " + значДиаграммы.значение);
		КонецЦикла;
	КонецЦикла;
КонецПроцедуры

&НаСервере
Процедура ПередЗакрытиемНаСервере()
	
	ОтчетыСКД.НазадУровеньДиаграммы(ЭтотОбъект);
	
КонецПроцедуры

&НаСервере
Процедура ПриЗакрытииНаСервере()
	
	ОбщиеНастройкиВызовСервера.СохранитьНастройкуОтчетаПриЗакрытии(ЭтотОбъект);
	
КонецПроцедуры

#КонецОбласти