#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Период = Параметры.Период;
	Периодичность = Параметры.Периодичность;
	ОтборСписок.ЗагрузитьЗначения(Параметры.ОтборСписок.выгрузитьЗначения());
	ТекГруппировка = Параметры.ТекГруппировка;
	ДопОтборСписок.ЗагрузитьЗначения(Параметры.ДопОтборСписок.выгрузитьЗначения());
	
	УстановитьТипСписка(ТекГруппировка, ОтборСписок, Элементы);
	
	СписокГруппировок = Новый Массив;
	СписокГруппировок.Добавить("Статья");
	СписокГруппировок.Добавить("ГруппыСтатей");
	СписокГруппировок.Добавить("Кошелек");
	СписокГруппировок.Добавить("ТипОперации");
	
	Элементы.ТекГруппировка.СписокВыбора.ЗагрузитьЗначения(СписокГруппировок);
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовФормы

&НаКлиенте
Процедура ОтборНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	
	ОП = Новый ОписаниеОповещения("ПослеОткрытияФормыВыбора", ЭтотОбъект);
	
	Если ТекГруппировка = "Статья" Тогда 
		ОткрытьФорму("Обработка.Отчеты.Форма.ФормаВыбора", новый Структура("ИмяМетаданных, Список, Дерево",
		"Справочник.Статьи", ОтборСписок.ВыгрузитьЗначения(), Истина), ЭтаФорма, , , , ОП, РежимОткрытияОкнаФормы.БлокироватьОкноВладельца);
	ИначеЕсли ТекГруппировка = "ГруппыСтатей" Тогда 
		ОткрытьФорму("Обработка.Отчеты.Форма.ФормаВыбора", новый Структура("ИмяМетаданных, Список, Дерево, ВыборТолькоГрупп",
		"Справочник.Статьи", ОтборСписок.ВыгрузитьЗначения(), Истина, Истина), ЭтаФорма, , , , ОП, РежимОткрытияОкнаФормы.БлокироватьОкноВладельца);
	ИначеЕсли ТекГруппировка = "Кошелек" Тогда
		ОткрытьФорму("Обработка.Отчеты.Форма.ФормаВыбора", новый Структура("ИмяМетаданных, Список",
		"Справочник.Кошельки", ОтборСписок.ВыгрузитьЗначения()), ЭтаФорма, , , , ОП, РежимОткрытияОкнаФормы.БлокироватьОкноВладельца);
	ИначеЕсли ТекГруппировка = "ТипОперации" Тогда		
		Рез = ОткрытьФорму("Обработка.Отчеты.Форма.ФормаВыбора", новый Структура("ИмяМетаданных, Список, СписокИсключение",
		"Перечисление.ТипыОпераций", ОтборСписок.ВыгрузитьЗначения(), ПолучитьСписокТиповОпераций(), ЭтаФорма, , , , ОП,
		РежимОткрытияОкнаФормы.БлокироватьОкноВладельца));
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ДопОтборСписокНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	
	ОткрытьФорму("Обработка.Отчеты.Форма.ФормаВыбора", Новый Структура("ИмяМетаданных, Список, СписокИсключение",
	"Перечисление.ТипыОпераций", ДопОтборСписок.ВыгрузитьЗначения(), ПолучитьСписокТиповОпераций()), ЭтотОбъект, , , ,
	Новый ОписаниеОповещения("ДопОтборСписокНачалоВыбораОповещениеОЗакрытии", ЭтотОбъект), РежимОткрытияОкнаФормы.БлокироватьОкноВладельца);
	
КонецПроцедуры

&НаКлиенте
Процедура ТекГруппировкаПриИзменении(Элемент)
	
	УстановитьТипСписка(ТекГруппировка, ОтборСписок, Элементы);
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура Готово(Команда)
	
	Если ТекГруппировка = "Кошелек" Тогда
		Если ДопОтборСписок.Количество() <> 1 Тогда 
			Сообщить("При выборе группировки ""Кошелек"" необходимо выбрать доп отбор по типу операции!");
			Возврат;
		КонецЕсли;
	КонецЕсли;
	
	Структ = Новый Структура;
	Структ.Вставить("Период", Период);
	Структ.Вставить("Периодичность", Периодичность);
	Структ.Вставить("ОтборСписок", ОтборСписок);
	Структ.Вставить("ТекГруппировка", ТекГруппировка);
	Структ.Вставить("ДопОтборСписок", ДопОтборСписок);
	
	ЭтаФорма.Закрыть(Структ);
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаКлиенте
Процедура ДопОтборСписокНачалоВыбораОповещениеОЗакрытии(Результат, ДопПараметры) Экспорт 
	
	Если ТипЗнч(Результат) = Тип("СписокЗначений") Тогда 
		ДопОтборСписок.ЗагрузитьЗначения(Результат.ВыгрузитьЗначения());
	КонецЕсли;
	
КонецПроцедуры

&НаКлиентеНаСервереБезКонтекста
Функция ПолучитьСписокТиповОпераций()
	
	Спис = Новый СписокЗначений;
	Спис.Добавить(ПредопределенноеЗначение("Перечисление.ТипыОпераций.Долги"));
	Спис.Добавить(ПредопределенноеЗначение("Перечисление.ТипыОпераций.Перевод"));
	Спис.Добавить(ПредопределенноеЗначение("Перечисление.ТипыОпераций.Сторно"));
	
	Возврат Спис;
	
КонецФункции

&НаКлиенте
Процедура ПослеОткрытияФормыВыбора(Рез, ДопПараметры) Экспорт 
	
	Если ТипЗнч(Рез) = Тип("СписокЗначений") Тогда 
		ОтборСписок.ЗагрузитьЗначения(Рез.ВыгрузитьЗначения());
	КонецЕсли;
	
КонецПроцедуры

&НаКлиентеНаСервереБезКонтекста
Процедура УстановитьТипСписка(ТекГруппировка, ОтборСписок, Элементы)
	
	МасТипов = новый Массив;
	
	Если ТекГруппировка = "Статья" Или ТекГруппировка = "ГруппыСтатей" Тогда 
		МасТипов.Добавить(Тип("СправочникСсылка.Статьи"));
	ИначеЕсли ТекГруппировка = "Кошелек" Тогда
		МасТипов.Добавить(Тип("СправочникСсылка.Кошельки"));
		
	ИначеЕсли ТекГруппировка = "ТипОперации" Тогда
		МасТипов.Добавить(Тип("ПеречислениеСсылка.ТипыОпераций"));
		
		Если ОтборСписок.Количество() = 0 Тогда 
			ОтборСписок = ПолучитьСписокТиповОпераций();
		КонецЕсли;
	КонецЕсли;
	
	ОтборСписок.ТипЗначения = Новый ОписаниеТипов(МасТипов);
	
	Если ТекГруппировка = "Кошелек" Тогда 
		Элементы.допОтборСписок.видимость = Истина;
	Иначе
		Элементы.допОтборСписок.видимость = Ложь;
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти
