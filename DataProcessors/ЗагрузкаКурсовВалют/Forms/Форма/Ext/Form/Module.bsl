
////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ СОБЫТИЙ ФОРМЫ

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	ВалютаУчета = Константы.ВалютаУчета.Получить();
	КодВалютыУчета = ВалютаУчета.Код;
	
	ТекущаяДата = ТекущаяДата();
	
	ПоследниеКурсы = РегистрыСведений.КурсыВалют.СрезПоследних();
	
	ПоискРубля = ПоследниеКурсы.НайтиСтроки(Новый Структура("Валюта", ЗначениеНастроекВызовСервераПовтИсп.ПолучитьЗначениеКонстанты("ВалютаУчета")));
	
	Если ПоискРубля.Количество() > 0 Тогда 
		ПоследниеКурсы.Удалить(ПоследниеКурсы.Индекс(ПоискРубля[0]));		
	КонецЕсли;
	
	ПоследниеКурсы.Сортировать("Период");
	
	Если ПоследниеКурсы.Количество() > 0 Тогда 
		НачалоПериодаЗагрузки = НачалоДня(ПоследниеКурсы[0].период);
	Иначе
		Запрос = Новый Запрос("ВЫБРАТЬ
		|	МИНИМУМ(Кошельки.Период) КАК Период
		|ИЗ
		|	РегистрНакопления.Кошельки КАК Кошельки");
		Рез = Запрос.Выполнить().Выбрать();
		
		Если Рез.Следующий() Тогда 
			Если Рез.Период <> NULL Тогда 
				НачалоПериодаЗагрузки = Рез.Период;
			Иначе
				НачалоПериодаЗагрузки = Мин(НачалоГода(ТекущаяДата), НачалоДня(ТекущаяДата) - 7 * 24 * 60 * 60);
			КонецЕсли;
		КонецЕсли;
	КонецЕсли;
	
	ОкончаниеПериодаЗагрузки = НачалоДня(ТекущаяДата); 
	
	КлючОбъекта = Метаданные.Обработки.ЗагрузкаКурсовВалют.Имя;
	ЗагрузитьОсновнуюНастройку();
	ЗаполнитьСписокВалютСервер();
	
	ОткрыватьЗагрузкуКурсовПриНачалеРаботы = Константы.ОткрыватьЗагрузкуКурсовПриНачалеРаботы.Получить();
КонецПроцедуры

&НаСервере
Процедура ЗагрузитьОсновнуюНастройку()
	запрос = новый запрос("ВЫБРАТЬ
	|	КлючНастроек.Ссылка
	|ИЗ
	|	Справочник.КлючНастроек КАК КлючНастроек
	|ГДЕ
	|	КлючНастроек.Основная
	|	И КлючНастроек.КлючОбъекта = &КлючОбъекта");
	запрос.УстановитьПараметр("КлючОбъекта", КлючОбъекта); 
	
	рез = запрос.Выполнить().Выбрать();
	
	Если рез.Следующий() Тогда		
		ТекНастройка = рез.ссылка;
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	Если ВалютаУчета.Пустая() Тогда
		ТекстПредупреждения = НСтр("ru = 'Не указана Валюта учета.
			|Откройте в меню форму ""Настройки"" и укажите валютой учета ""Российский рубль"" (код 643)'");
		ПоказатьПредупреждение(, ТекстПредупреждения);
		Отказ = истина;
		Возврат;
	КонецЕсли; 
	
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ СОБЫТИЙ ЭЛЕМЕНТОВ ШАПКИ ФОРМЫ

////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ СОБЫТИЙ ТАБЛИЦЫ ФОРМЫ СписокВалют

&НаКлиенте
Процедура СписокВалютВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	
	ТекущиеДанные = Элементы.СписокВалют.ТекущиеДанные;
	
	Если ТекущиеДанные = Неопределено Тогда
		Возврат;
	
	Иначе
		
		СтандартнаяОбработка = Ложь;
		ТекущиеДанные.Загружать = НЕ ТекущиеДанные.Загружать;
		Если ТекущиеДанные.Загружать 
			И ЗначениеЗаполнено(ТекущиеДанные.ДатаКурса) И ТекущиеДанные.ДатаКурса < НачалоПериодаЗагрузки Тогда
			ПроверитьНачалоПериодаЗагрузки(НачалоПериодаЗагрузки, ТекущиеДанные.ДатаКурса);
		КонецЕсли; 
		
	КонецЕсли;
	
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ КОМАНД ФОРМЫ

&НаКлиенте
Процедура Загрузить(Команда)
	
	ОчиститьСообщения();
	
	Если СписокВалют.Количество() = 0 Тогда
		ТекстСообщения = НСтр("ru = 'В списке нет ни одной валюты.
			|Добавьте валюты из классификатора в справочнике валют'");
		ПоказатьПредупреждение(, ТекстСообщения);
		Возврат;
	КонецЕсли;
	
	Если Не ЗначениеЗаполнено(НачалоПериодаЗагрузки) Тогда
		ТекстСообщения = НСтр("ru = 'Не задана дата начала периода загрузки.'");
		ПоказатьПредупреждение(, ТекстСообщения);
		Возврат;
	КонецЕсли;
	
	Если Не ЗначениеЗаполнено(ОкончаниеПериодаЗагрузки) Тогда
		ТекстСообщения = НСтр("ru = 'Не задана дата окончания периода загрузки.'");
		ПоказатьПредупреждение(, ТекстСообщения);
		Возврат;
	КонецЕсли;
	
	Если ОкончаниеПериодаЗагрузки < НачалоПериодаЗагрузки Тогда
		ТекстСообщения = НСтр("ru = 'Начало периода больше его окончания.'");
		ПоказатьПредупреждение(, ТекстСообщения);
		Возврат;
	КонецЕсли;
	
	Элементы.ГруппаСтраницыФормы.ТекущаяСтраница = Элементы.СтраницаОжидание;
	
	ПодключитьОбработчикОжидания("ЗагрузитьКурсыКлиент", 0.2, Истина);
	
КонецПроцедуры

&НаКлиенте
Процедура ВыделитьВсе(Команда)
	ИзменитьПометку(Истина);
КонецПроцедуры

&НаКлиенте
Процедура ОтменитьВыделение(Команда)
	ИзменитьПометку(Ложь);
КонецПроцедуры


////////////////////////////////////////////////////////////////////////////////
// СЛУЖЕБНЫЕ ПРОЦЕДУРЫ И ФУНКЦИИ

&НаСервере
Процедура ЗаполнитьСписокВалютСервер()

	ВалютыДляЗагрузки = ОбщиеНастройкиВызовСервера.ОбщиеНастройкиЗагрузить(КлючОбъекта, ТекНастройка, Новый Массив);
	
	СписокВалют.Очистить();
	
	Выборка = Справочники.Валюты.Выбрать();
	Пока Выборка.Следующий() Цикл		
		Если Выборка.Ссылка <> ВалютаУчета Тогда
			СтрокаВалюты = СписокВалют.Добавить();
			СтрокаВалюты.Валюта = Выборка.Ссылка;
			СтрокаВалюты.КодВалюты = Выборка.Код;
			СтрокаВалюты.СимвольныйКод = Выборка.Наименование;
			СтрокаВалюты.Загружать = ВалютыДляЗагрузки.Найти(СтрокаВалюты.Валюта) <> Неопределено; //Выборка.ЗагружаетсяИзИнтернета;
		КонецЕсли; 	
	КонецЦикла; 
	
	ОбновитьКурсыВалютВСписке();
КонецПроцедуры
 
&НаСервере
Процедура ОбновитьКурсыВалютВСписке()
	
	ВалютаУчетаСтрокой = Строка(ВалютаУчета);
	ТекДата = ТекущаяДата();
	
	СтруктураОтбора = Новый Структура("БазоваяВалюта", ВалютаУчета);
	СрезКурсов = РегистрыСведений.КурсыВалют.СрезПоследних(ТекДата, СтруктураОтбора);
	
	Для Каждого СтрокаСписка Из СписокВалют Цикл
		
		КурсИКратность = СрезКурсов.Найти(СтрокаСписка.Валюта, "Валюта");
		Если КурсИКратность = Неопределено Тогда
			
			СтрокаСписка.ДатаКурса = ТекДата;
			СтрокаСписка.Курс      = 0;
			СтрокаСписка.Кратность = 1;
			
			СтрокаСписка.КурсСтрокой = НСтр("ru = '<курс не указан>'");
			
		Иначе
			
			СтрокаСписка.ДатаКурса = КурсИКратность.Период;
			СтрокаСписка.Курс      = КурсИКратность.Курс;
			СтрокаСписка.Кратность = КурсИКратность.Кратность;
			
			Если СтрокаСписка.Кратность = 1 Тогда
				СтрокаСписка.КурсСтрокой = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(НСтр("ru = '%1 %2 (%3)'"),
					Формат(СтрокаСписка.Курс, "ЧДЦ=3"),
					ВалютаУчетаСтрокой,
					Формат(СтрокаСписка.ДатаКурса, "ДФ=дд.ММ.гг"));
			Иначе
				СтрокаСписка.КурсСтрокой = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(НСтр("ru = '%1 %2 за %3 %4 (%5)'"),
					Формат(СтрокаСписка.Курс, "ЧДЦ=3"),
					ВалютаУчетаСтрокой,
					Формат(СтрокаСписка.Кратность, "ЧДЦ=; ЧГ="),
					СтрокаСписка.СимвольныйКод,
					Формат(СтрокаСписка.ДатаКурса, "ДФ=дд.ММ.гг"));
			КонецЕсли;
			
			Если СтрокаСписка.Загружать 
				И ЗначениеЗаполнено(СтрокаСписка.ДатаКурса) И СтрокаСписка.ДатаКурса < НачалоПериодаЗагрузки Тогда
				ПроверитьНачалоПериодаЗагрузки(НачалоПериодаЗагрузки, СтрокаСписка.ДатаКурса);
			КонецЕсли;
			
		КонецЕсли; 
		
	КонецЦикла; 
	
КонецПроцедуры

&НаКлиентеНаСервереБезКонтекста
Процедура ПроверитьНачалоПериодаЗагрузки(НачалоПериодаЗагрузки, ДатаКурса)
	
	ДатаНаГодРаньше = ДобавитьМесяц(КонецДня(ТекущаяДата()) + 1, -12);
	НачалоПериодаЗагрузки = Макс(Мин(НачалоПериодаЗагрузки, ДатаКурса), ДатаНаГодРаньше);
	
КонецПроцедуры


&НаКлиенте
Процедура ЗагрузитьКурсыКлиент()

	ТекстСообщения = "";
	РезультатЗагрузки = ЗагрузитьКурсыСРБК(ТекстСообщения);
	
	Элементы.ГруппаСтраницыФормы.ТекущаяСтраница = Элементы.СтраницаСписок;
	
	Оповестить("ОбновленыКурсыВалют");
	
	Если НЕ РезультатЗагрузки = Истина Тогда
		Если ЗначениеЗаполнено(ТекстСообщения) Тогда
			ПоказатьПредупреждение(, ТекстСообщения);
		Иначе
			ПоказатьПредупреждение(, НСтр("ru = 'Курс загружен не по всем Валютам!'") );
		КонецЕсли; 
	Иначе
		ПоказатьПредупреждение(, НСтр("ru = 'Курсы загружены.'") );
	КонецЕсли; 

КонецПроцедуры

&НаСервере
Функция ЗагрузитьКурсыСРБК(ТекстСообщения)

	ТекстСообщения = "";
	
	ВалютыДляЗагрузки = СписокВалют.Выгрузить(, "КодВалюты,Валюта,Загружать").НайтиСтроки(Новый Структура("Загружать", Истина));
	Если ВалютыДляЗагрузки.Количество() = 0 Тогда
		ТекстСообщения = НСтр("ru = 'Не отмечено ни одной валюты Для загрузки курсов'");
		Возврат Ложь;
	КонецЕсли; 
	
	Результат = РаботаСКурсамиВалют.ЗагрузитьКурсыВалютПоПараметрам(
		ВалютыДляЗагрузки,
		НачалоПериодаЗагрузки,
		ОкончаниеПериодаЗагрузки);
	
	ЕстьУспешноЗагруженныеКурсы = Ложь;
	БезОшибок = Истина;
	
	Для Каждого СостояниеЗагрузки Из Результат Цикл
		Если СостояниеЗагрузки.СтатусОперации Тогда
			ЕстьУспешноЗагруженныеКурсы = Истина;
		Иначе
			БезОшибок = Ложь;
			Индекс = СписокВалют.Индекс(СписокВалют.НайтиСтроки(Новый Структура("Валюта", СостояниеЗагрузки.Валюта))[0]);
			ИмяПоля = СтрЗаменить("СписокВалют[x].Валюта", "x", Строка(Индекс));
			Сообщить(СостояниеЗагрузки.Сообщение);
		КонецЕсли;
	КонецЦикла;
	
	Если ЕстьУспешноЗагруженныеКурсы Тогда
		ОбновитьКурсыВалютВСписке();
	КонецЕсли;
	
	// Если загрузка прошла успешно, запишем отмеченные валюты.
	МассивВалют = Новый Массив;
	Для Каждого Строка Из ВалютыДляЗагрузки Цикл
		МассивВалют.Добавить(Строка.Валюта);
	КонецЦикла;	
	
	Если не ЗначениеЗаполнено(ТекНастройка) Тогда 
		новКлючНастроек = Справочники.КлючНастроек.СоздатьЭлемент();
		новКлючНастроек.Код = "Основная";
		новКлючНастроек.КлючОбъекта = КлючОбъекта;
		новКлючНастроек.Основная = Истина;
		новКлючНастроек.Записать();
		
		ТекНастройка = новКлючНастроек.Ссылка;
	КонецЕсли;
	
	Если ЗначениеЗаполнено(ВалютаУчета) Тогда
		выборкаВалют = Справочники.Валюты.Выбрать();
		
		Для Каждого Строка Из ВалютыДляЗагрузки Цикл
			РаботаСКурсамиВалют.ПроверитьКорректностьКурсаНа01_01_1980(Строка.Валюта, ВалютаУчета);
		КонецЦикла;
		
		РаботаСКурсамиВалют.ПроверитьКорректностьКурсаНа01_01_1980(ВалютаУчета, ВалютаУчета);		
	КонецЕсли;
		
	ОбщиеНастройкиВызовСервера.ОбщиеНастройкиСохранить(КлючОбъекта, ТекНастройка, МассивВалют);
	
	Возврат БезОшибок;

КонецФункции

&НаКлиенте
Процедура ИзменитьПометку(Пометка)

	Для Каждого СтрокаВалюты Из СписокВалют Цикл
		СтрокаВалюты.Загружать = ?(Пометка = Неопределено, Не СтрокаВалюты.Загружать, Пометка);
	КонецЦикла;

КонецПроцедуры


&НаКлиенте
Процедура ОткрыватьЗагрузкуКурсовПриНачалеРаботыПриИзменении(Элемент)
	ОткрыватьЗагрузкуКурсовПриНачалеРаботыПриИзмененииНаСервере(ОткрыватьЗагрузкуКурсовПриНачалеРаботы);
КонецПроцедуры


&НаСервереБезКонтекста
Процедура ОткрыватьЗагрузкуКурсовПриНачалеРаботыПриИзмененииНаСервере(текЗначение)
	Константы.ОткрыватьЗагрузкуКурсовПриНачалеРаботы.Установить(текЗначение);
КонецПроцедуры
 
