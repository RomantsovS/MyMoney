#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	ОчистилиОтборы = Ложь;
	
	Если Параметры.Свойство("ОтборПоВалюте") Тогда 
		Если Не ОчистилиОтборы Тогда 
			Список.Отбор.Элементы.Очистить();
			ОчистилиОтборы = Истина;
		КонецЕсли;
		
		ЭлементОтбора = Список.Отбор.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных")); 
		ЭлементОтбора.ЛевоеЗначение    = Новый ПолеКомпоновкиДанных("Валюта");
		Если ТипЗнч(Параметры.ОтборПоВалюте) = Тип("Массив") Тогда
			ЭлементОтбора.ВидСравнения     = ВидСравненияКомпоновкиДанных.ВСписке;
		Иначе
			ЭлементОтбора.ВидСравнения     = ВидСравненияКомпоновкиДанных.Равно;
		КонецЕсли;
		ЭлементОтбора.Использование    = Истина;
		ЭлементОтбора.РежимОтображения = РежимОтображенияЭлементаНастройкиКомпоновкиДанных.БыстрыйДоступ;
		ЭлементОтбора.ПравоеЗначение   = Параметры.ОтборПоВалюте;
	КонецЕсли;
	
	Если Параметры.Свойство("ОтборПоКошельку") Тогда 
		Если Не ОчистилиОтборы Тогда 
			Список.Отбор.Элементы.Очистить();
			ОчистилиОтборы = Истина;
		КонецЕсли;
		
		ГруппаЭлементовОтбора = Список.Отбор.Элементы.Добавить(Тип("ГруппаЭлементовОтбораКомпоновкиДанных"));
		ГруппаЭлементовОтбора.ТипГруппы = ТипГруппыЭлементовОтбораКомпоновкиДанных.ГруппаИли;
		ГруппаЭлементовОтбора.РежимОтображения = РежимОтображенияЭлементаНастройкиКомпоновкиДанных.Обычный;		
		
		ЭлементОтбора = ГруппаЭлементовОтбора.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
		ЭлементОтбора.ЛевоеЗначение    = Новый ПолеКомпоновкиДанных("Кошелек");
		Если ТипЗнч(Параметры.ОтборПоКошельку) = Тип("Массив") Тогда
			ЭлементОтбора.ВидСравнения     = ВидСравненияКомпоновкиДанных.ВСписке;
		Иначе
			ЭлементОтбора.ВидСравнения     = ВидСравненияКомпоновкиДанных.Равно;
		КонецЕсли;
		ЭлементОтбора.Использование    = Истина;
		ЭлементОтбора.РежимОтображения = РежимОтображенияЭлементаНастройкиКомпоновкиДанных.Обычный;
		ЭлементОтбора.ПравоеЗначение   = Параметры.ОтборПоКошельку;
		
		ЭлементОтбора = ГруппаЭлементовОтбора.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
		ЭлементОтбора.ЛевоеЗначение    = Новый ПолеКомпоновкиДанных("КошелекПриемник");
		Если ТипЗнч(Параметры.ОтборПоКошельку) = Тип("Массив") Тогда
			ЭлементОтбора.ВидСравнения     = ВидСравненияКомпоновкиДанных.ВСписке;
		Иначе
			ЭлементОтбора.ВидСравнения     = ВидСравненияКомпоновкиДанных.Равно;
		КонецЕсли;
		ЭлементОтбора.Использование    = Истина;
		ЭлементОтбора.РежимОтображения = РежимОтображенияЭлементаНастройкиКомпоновкиДанных.Обычный;
		ЭлементОтбора.ПравоеЗначение   = Параметры.ОтборПоКошельку;
	КонецЕсли;
	
	Если Параметры.Свойство("ОтборПоМетке") Тогда 
		Если Не ОчистилиОтборы Тогда 
			Список.Отбор.Элементы.Очистить();
			ОчистилиОтборы = Истина;
		КонецЕсли;
		
		ГруппаОтбораМетка = Список.Отбор.Элементы.Добавить(Тип("ГруппаЭлементовОтбораКомпоновкиДанных"));
		ГруппаОтбораМетка.Использование = Истина;
		ГруппаОтбораМетка.ТипГруппы = ТипГруппыЭлементовОтбораКомпоновкиДанных.ГруппаИли;
		
		ЭлементОтбора = ГруппаОтбораМетка.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных")); 
		ЭлементОтбора.ЛевоеЗначение    = Новый ПолеКомпоновкиДанных("Метка");
		Если ТипЗнч(Параметры.ОтборПоМетке) = Тип("Массив") Тогда
			ЭлементОтбора.ВидСравнения     = ВидСравненияКомпоновкиДанных.ВСписке;
		Иначе
			ЭлементОтбора.ВидСравнения     = ВидСравненияКомпоновкиДанных.Равно;
		КонецЕсли;
		ЭлементОтбора.Использование    = Истина;
		ЭлементОтбора.РежимОтображения = РежимОтображенияЭлементаНастройкиКомпоновкиДанных.БыстрыйДоступ;
		ЭлементОтбора.ПравоеЗначение   = Параметры.ОтборПоМетке;
		
		Если ЗначениеЗаполнено(Параметры.ОтборПоМетке) Тогда
			ЭлементОтбора = ГруппаОтбораМетка.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных")); 
			ЭлементОтбора.ЛевоеЗначение    = Новый ПолеКомпоновкиДанных("МеткаОтправитель");
			Если ТипЗнч(Параметры.ОтборПоМетке) = Тип("Массив") Тогда
				ЭлементОтбора.ВидСравнения     = ВидСравненияКомпоновкиДанных.ВСписке;
			Иначе
				ЭлементОтбора.ВидСравнения     = ВидСравненияКомпоновкиДанных.Равно;
			КонецЕсли;
			ЭлементОтбора.Использование    = Истина;
			ЭлементОтбора.РежимОтображения = РежимОтображенияЭлементаНастройкиКомпоновкиДанных.БыстрыйДоступ;
			ЭлементОтбора.ПравоеЗначение   = Параметры.ОтборПоМетке;
		КонецЕсли;
	КонецЕсли;
	
	Если Параметры.Свойство("ОтборПоФизЛицу") Тогда 
		Если Не ОчистилиОтборы Тогда 
			Список.Отбор.Элементы.Очистить();
			ОчистилиОтборы = Истина;
		КонецЕсли;
		
		ЭлементОтбора = Список.Отбор.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных")); 
		ЭлементОтбора.ЛевоеЗначение    = Новый ПолеКомпоновкиДанных("ФизЛицо");
		ЭлементОтбора.ВидСравнения     = ВидСравненияКомпоновкиДанных.Равно;
		ЭлементОтбора.Использование    = Истина;
		ЭлементОтбора.РежимОтображения = РежимОтображенияЭлементаНастройкиКомпоновкиДанных.Обычный;
		ЭлементОтбора.ПравоеЗначение   = Параметры.ОтборПоФизЛицу;
	КонецЕсли;
	
	Если Параметры.Свойство("ОтборПоСтатье") Тогда 
		Если Не ОчистилиОтборы Тогда 
			Список.Отбор.Элементы.Очистить();
			ОчистилиОтборы = Истина;
		КонецЕсли;
		
		ЭлементОтбора = Список.Отбор.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных")); 
		ЭлементОтбора.ЛевоеЗначение    = Новый ПолеКомпоновкиДанных("Статья");
		Если Параметры.ОтборПоСтатье.ЭтоГруппа Тогда 
			ЭлементОтбора.ВидСравнения     = ВидСравненияКомпоновкиДанных.ВИерархии;
		Иначе
			ЭлементОтбора.ВидСравнения     = ВидСравненияКомпоновкиДанных.Равно;
		КонецЕсли;
		ЭлементОтбора.Использование    = Истина;
		ЭлементОтбора.РежимОтображения = РежимОтображенияЭлементаНастройкиКомпоновкиДанных.БыстрыйДоступ;
		ЭлементОтбора.ПравоеЗначение   = Параметры.ОтборПоСтатье;
	КонецЕсли;
	
	Если Параметры.Свойство("ОтборПоТипуОперации") Тогда 
		Если Не ОчистилиОтборы Тогда 
			Список.Отбор.Элементы.Очистить();
			ОчистилиОтборы = Истина;
		КонецЕсли;
		
		ЭлементОтбора = Список.Отбор.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных")); 
		ЭлементОтбора.ЛевоеЗначение    = Новый ПолеКомпоновкиДанных("ТипОперации");
		Если ТипЗнч(Параметры.ОтборПоТипуОперации) = Тип("Массив") Тогда
			ЭлементОтбора.ВидСравнения     = ВидСравненияКомпоновкиДанных.ВСписке;
		Иначе
			ЭлементОтбора.ВидСравнения     = ВидСравненияКомпоновкиДанных.Равно;
		КонецЕсли;
		ЭлементОтбора.Использование    = Истина;
		ЭлементОтбора.РежимОтображения = РежимОтображенияЭлементаНастройкиКомпоновкиДанных.БыстрыйДоступ;
		ЭлементОтбора.ПравоеЗначение   = Параметры.ОтборПоТипуОперации;
	КонецЕсли;
	
	Если Параметры.Свойство("ОтборПоПериоду") Тогда 
		Если Не ОчистилиОтборы Тогда 
			Список.Отбор.Элементы.Очистить();
			ОчистилиОтборы = Истина;
		КонецЕсли;
		
		Если ЗначениеЗаполнено(Параметры.ОтборПоПериоду.НачалоПериода) Тогда 
			ЭлементОтбора = Список.Отбор.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных")); 
			ЭлементОтбора.ЛевоеЗначение    = Новый ПолеКомпоновкиДанных("Дата");
			ЭлементОтбора.ВидСравнения     = ВидСравненияКомпоновкиДанных.БольшеИлиРавно;
			ЭлементОтбора.Использование    = Истина;
			ЭлементОтбора.РежимОтображения = РежимОтображенияЭлементаНастройкиКомпоновкиДанных.Обычный;
			ЭлементОтбора.ПравоеЗначение   = Параметры.ОтборПоПериоду.НачалоПериода;
		КонецЕсли;
		
		Если ЗначениеЗаполнено(Параметры.ОтборПоПериоду.КонецПериода) Тогда 
			ЭлементОтбора = Список.Отбор.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных")); 
			ЭлементОтбора.ЛевоеЗначение    = Новый ПолеКомпоновкиДанных("Дата");
			ЭлементОтбора.ВидСравнения     = ВидСравненияКомпоновкиДанных.МеньшеИлиРавно;
			ЭлементОтбора.Использование    = Истина;
			ЭлементОтбора.РежимОтображения = РежимОтображенияЭлементаНастройкиКомпоновкиДанных.Обычный;
			ЭлементОтбора.ПравоеЗначение   = Параметры.ОтборПоПериоду.КонецПериода;
		КонецЕсли;
	КонецЕсли;
	
	Если Параметры.Свойство("ОтборПоСсылке") Тогда 
		Если Не ОчистилиОтборы Тогда 
			Список.Отбор.Элементы.Очистить();
			ОчистилиОтборы = Истина;
		КонецЕсли;
		
		ЭлементОтбора = Список.Отбор.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных")); 
		ЭлементОтбора.ЛевоеЗначение    = Новый ПолеКомпоновкиДанных("Ссылка");
		ЭлементОтбора.ВидСравнения     = ВидСравненияКомпоновкиДанных.ВСписке;
		ЭлементОтбора.Использование    = Истина;
		ЭлементОтбора.РежимОтображения = РежимОтображенияЭлементаНастройкиКомпоновкиДанных.Обычный;
		ЭлементОтбора.ПравоеЗначение   = Параметры.ОтборПоСсылке;
	КонецЕсли;
	
	Элементы.Список.НачальноеОтображениеСписка = НачальноеОтображениеСписка.Начало;
	
	УстановитьУсловноеОформление();
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура УдалитьОперацию(Команда)
	ДанныеОперации = УдалитьОперациюНаСервереПолучитьДанные();
	
	Если ДанныеОперации = Неопределено Тогда 
		Возврат;
	КонецЕсли;
	
	ПоказатьВопрос(Новый ОписаниеОповещения("УдалитьОперациюВопросЗавершение", ЭтотОбъект),
	СтрШаблон(НСтр("ru = 'Вы уверены, что хотите удалить операцию на сумму %1'"), ДанныеОперации), РежимДиалогаВопрос.ОКОтмена);
КонецПроцедуры

&НаКлиенте
Процедура ОтборПоКомментарию(Команда)
	ОтборПоКомментариюНаСервере();
КонецПроцедуры

&НаКлиенте
Процедура ОтборПоМетке(Команда)
	ОтборПоМеткеНаСервере();
КонецПроцедуры

&НаКлиенте
Процедура Сторнировать(Команда)	
	ОткрытьФорму("Документ.Операция.ФормаОбъекта", Новый Структура("Основание", Элементы.Список.ТекущиеДанные.Ссылка));
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаСервере
Процедура УстановитьУсловноеОформление()
	
	#Если МобильноеПриложениеСервер Тогда
		Элементы.СписокСтатья.Шрифт = Новый Шрифт(Элементы.СписокСтатья.Шрифт, , 8, Истина, , , , 80);
		Элементы.СписокВалюта.Шрифт = Новый Шрифт(Элементы.СписокВалюта.Шрифт, , 8, Истина, , , , 80);
		
		Элементы.СписокМетка.Шрифт = Новый Шрифт(Элементы.СписокМетка.Шрифт, , 8, , , , , 50);
		
		Элементы.СписокСуммаДоп1.Шрифт = Новый Шрифт(Элементы.СписокСуммаДоп1.Шрифт, , 8, , , , , 70);
		Элементы.СписокСуммаДоп2.Шрифт = Новый Шрифт(Элементы.СписокСуммаДоп1.Шрифт, , 8, , , , , 70);
	#Иначе
		Элементы.СписокСтатья.Шрифт = Новый Шрифт(Элементы.СписокСтатья.Шрифт, , 8, Истина, , , , 80);
		Элементы.СписокВалюта.Шрифт = Новый Шрифт(Элементы.СписокВалюта.Шрифт, , 8, Истина, , , , 80);
		
		Элементы.СписокМетка.Шрифт = Новый Шрифт(Элементы.СписокМетка.Шрифт, , 8, , , , , 100);
		
		Элементы.СписокСуммаДоп1.Шрифт = Новый Шрифт(Элементы.СписокСуммаДоп1.Шрифт, , 8, , , , , 100);
		Элементы.СписокСуммаДоп2.Шрифт = Новый Шрифт(Элементы.СписокСуммаДоп2.Шрифт, , 8, , , , , 100);
		
		Элементы.СписокДата.Ширина = 7;
		Элементы.СписокДата1.Ширина = 7;
	#КонецЕсли
	
	СтандартныеПодсистемыСервер.УстановитьУсловноеОформлениеПоляДата(ЭтотОбъект, "Список.Дата", Элементы.СписокДата.Имя);
	
	СтандартныеПодсистемыСервер.УстановитьУсловноеОформлениеПоТипуОперации(ЭтотОбъект, "Список.ТипОперации", Элементы.СписокСумма.Имя);
	
	СтандартныеПодсистемыСервер.УстановитьГоризонтальноеПоложениеСумма(ЭтотОбъект, Элементы.СписокСумма.Имя);
	
	СтандартныеПодсистемыСервер.УстановитьПараметрыСпискаЭлементСумма(ЭтотОбъект, Элементы.СписокСумма.Имя);
	
	СтандартныеПодсистемыСервер.УстановитьПараметрыСпискаЭлементКошелек(ЭтотОбъект, Элементы.СписокКошелек.Имя);
	
	СтандартныеПодсистемыСервер.УстановитьПараметрыСпискаЭлементКомментарий(ЭтотОбъект, Элементы.СписокКомментарий.Имя);
	
	СтандартныеПодсистемыСервер.УстановитьУсловноеОформлениеПоляКошелек(ЭтотОбъект);
	
	СтандартныеПодсистемыСервер.УстановитьУсловноеОформлениеПоляМетка(ЭтотОбъект);
	
КонецПроцедуры

&НаСервере
Процедура УдалитьОперациюНаСервере()
	Если Элементы.Список.ТекущаяСтрока <> Неопределено Тогда 
		ОбъектОперация = Элементы.Список.ТекущаяСтрока.Ссылка.получитьОбъект();
		ОбъектОперация.Заблокировать();
		ОбъектОперация.Удалить();
	КонецЕсли;
КонецПроцедуры

&НаСервере
Функция УдалитьОперациюНаСервереПолучитьДанные()
	Если Элементы.Список.ТекущаяСтрока <> Неопределено Тогда 
		Возврат Строка(Элементы.Список.ТекущаяСтрока.Ссылка.Сумма) + Элементы.Список.ТекущаяСтрока.Ссылка.Валюта.КраткоеНаименование;
	КонецЕсли;
	
	Возврат Неопределено;
КонецФункции

&НаКлиенте
Процедура УдалитьОперациюВопросЗавершение(Ответ, ДопПараметры) Экспорт
	Если Ответ = КодВозвратаДиалога.Отмена Тогда 
		Возврат;
	КонецЕсли;
	
	УдалитьОперациюНаСервере();
	
	Элементы.Список.Обновить();
	
	Оповестить("ОбновитьОстатки");
КонецПроцедуры

&НаСервере
Процедура ОтборПоКомментариюНаСервере()	
	Если Не УстановленОтборПоКомментарию Тогда 
		ОтборЭлемента = Список.Отбор.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
		ОтборЭлемента.ЛевоеЗначение = Новый ПолеКомпоновкиДанных("Комментарий");
		ОтборЭлемента.ВидСравнения = ВидСравненияКомпоновкиДанных.Равно;
		ОтборЭлемента.ПравоеЗначение = Элементы.Список.ТекущаяСтрока.Комментарий;	
	Иначе
		Для Каждого Стр Из Список.Отбор.Элементы Цикл
			Если ТипЗнч(Стр) = Тип("ГруппаЭлементовОтбораКомпоновкиДанных") Тогда 
				Продолжить;
			КонецЕсли;
			
			Если Стр.ЛевоеЗначение = Новый ПолеКомпоновкиДанных("Комментарий") Тогда 
				Список.Отбор.Элементы.Удалить(Стр);
				Прервать;
			КонецЕсли;
		КонецЦикла;
	КонецЕсли;
	
	УстановленОтборПоКомментарию = Не УстановленОтборПоКомментарию;
	
	Элементы.СписокКонтекстноеМенюОтборПоКомментарию.Заголовок =
	?(УстановленОтборПоКомментарию, НСтр("ru = 'Снять отбор по комментарию'"), НСтр("ru = 'Установить отбор по комментарию'"));
КонецПроцедуры

&НаСервере
Процедура ОтборПоМеткеНаСервере()
	Если Не УстановленОтборПоМетке Тогда 
		ОтборЭлемента = Список.Отбор.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
		ОтборЭлемента.ЛевоеЗначение = Новый ПолеКомпоновкиДанных("Метка");
		ОтборЭлемента.ВидСравнения = ВидСравненияКомпоновкиДанных.Равно;
		ОтборЭлемента.ПравоеЗначение = Элементы.Список.ТекущаяСтрока.Метка;	
	Иначе
		Для Каждого Стр Из Список.Отбор.Элементы Цикл
			Если ТипЗнч(Стр) = Тип("ГруппаЭлементовОтбораКомпоновкиДанных") Тогда 
				Продолжить;
			КонецЕсли;
			
			Если Стр.ЛевоеЗначение = Новый ПолеКомпоновкиДанных("Метка") Тогда 
				Список.Отбор.Элементы.Удалить(Стр);
				Прервать;
			КонецЕсли;
		КонецЦикла;
	КонецЕсли;
	
	УстановленОтборПоМетке = Не УстановленОтборПоМетке;
	
	Элементы.СписокКонтекстноеМенюОтборПоМетке.Заголовок =
	?(УстановленОтборПоМетке, НСтр("ru = 'Снять отбор по метке'"), НСтр("ru = 'Установить отбор по метке'"));
КонецПроцедуры

#КонецОбласти