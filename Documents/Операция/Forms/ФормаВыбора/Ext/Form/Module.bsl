#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	очистилиОтборы = ложь;
	
	Если параметры.Свойство("ОтборПоКошельку") Тогда 
		Если не очистилиОтборы Тогда 
			Список.Отбор.Элементы.Очистить();
			очистилиОтборы = Истина;
		КонецЕсли;
		
		ГруппаЭлементовОтбора = Список.Отбор.Элементы.Добавить(Тип("ГруппаЭлементовОтбораКомпоновкиДанных"));
		ГруппаЭлементовОтбора.ТипГруппы = ТипГруппыЭлементовОтбораКомпоновкиДанных.ГруппаИли;
		ГруппаЭлементовОтбора.РежимОтображения = РежимОтображенияЭлементаНастройкиКомпоновкиДанных.Обычный;		
		
		ЭлементОтбора = ГруппаЭлементовОтбора.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
		ЭлементОтбора.ЛевоеЗначение    = Новый ПолеКомпоновкиДанных("Кошелек");
		Если ТипЗнч(Параметры.ОтборПоКошельку) = тип("Массив") Тогда
			ЭлементОтбора.ВидСравнения     = ВидСравненияКомпоновкиДанных.ВСписке;
		Иначе
			ЭлементОтбора.ВидСравнения     = ВидСравненияКомпоновкиДанных.Равно;
		КонецЕсли;
		ЭлементОтбора.Использование    = Истина;
		ЭлементОтбора.РежимОтображения = РежимОтображенияЭлементаНастройкиКомпоновкиДанных.Обычный;
		ЭлементОтбора.ПравоеЗначение   = Параметры.ОтборПоКошельку;	
		
		ЭлементОтбора = ГруппаЭлементовОтбора.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
		ЭлементОтбора.ЛевоеЗначение    = Новый ПолеКомпоновкиДанных("КошелекПриемник");
		Если ТипЗнч(Параметры.ОтборПоКошельку) = тип("Массив") Тогда
			ЭлементОтбора.ВидСравнения     = ВидСравненияКомпоновкиДанных.ВСписке;
		Иначе
			ЭлементОтбора.ВидСравнения     = ВидСравненияКомпоновкиДанных.Равно;
		КонецЕсли;
		ЭлементОтбора.Использование    = Истина;
		ЭлементОтбора.РежимОтображения = РежимОтображенияЭлементаНастройкиКомпоновкиДанных.Обычный;
		ЭлементОтбора.ПравоеЗначение   = Параметры.ОтборПоКошельку;
	КонецЕсли;
	
	Если параметры.Свойство("отборПоФизЛицу") Тогда 
		Если не очистилиОтборы Тогда 
			Список.Отбор.Элементы.Очистить();
			очистилиОтборы = Истина;
		КонецЕсли;
		
		ЭлементОтбора = Список.Отбор.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных")); 
		ЭлементОтбора.ЛевоеЗначение    = Новый ПолеКомпоновкиДанных("ФизЛицо");
		ЭлементОтбора.ВидСравнения     = ВидСравненияКомпоновкиДанных.Равно;
		ЭлементОтбора.Использование    = Истина;
		ЭлементОтбора.РежимОтображения = РежимОтображенияЭлементаНастройкиКомпоновкиДанных.Обычный;
		ЭлементОтбора.ПравоеЗначение   = параметры.отборПоФизЛицу;
	КонецЕсли;
	
	Если параметры.Свойство("отборПоСтатье") Тогда 
		Если не очистилиОтборы Тогда 
			Список.Отбор.Элементы.Очистить();
			очистилиОтборы = Истина;
		КонецЕсли;
		
		ЭлементОтбора = Список.Отбор.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных")); 
		ЭлементОтбора.ЛевоеЗначение    = Новый ПолеКомпоновкиДанных("Статья");
		Если параметры.отборПоСтатье.этоГруппа Тогда 
			ЭлементОтбора.ВидСравнения     = ВидСравненияКомпоновкиДанных.ВИерархии;
		Иначе
			ЭлементОтбора.ВидСравнения     = ВидСравненияКомпоновкиДанных.Равно;
		КонецЕсли;
		ЭлементОтбора.Использование    = Истина;
		ЭлементОтбора.РежимОтображения = РежимОтображенияЭлементаНастройкиКомпоновкиДанных.БыстрыйДоступ;
		ЭлементОтбора.ПравоеЗначение   = параметры.отборПоСтатье;
	КонецЕсли;
	
	Если параметры.Свойство("отборПоВалюте") Тогда 
		Если не очистилиОтборы Тогда 
			Список.Отбор.Элементы.Очистить();
			очистилиОтборы = Истина;
		КонецЕсли;
		
		ЭлементОтбора = Список.Отбор.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных")); 
		ЭлементОтбора.ЛевоеЗначение    = Новый ПолеКомпоновкиДанных("Валюта");
		Если ТипЗнч(Параметры.отборПоВалюте) = тип("Массив") Тогда
			ЭлементОтбора.ВидСравнения     = ВидСравненияКомпоновкиДанных.ВСписке;
		Иначе
			ЭлементОтбора.ВидСравнения     = ВидСравненияКомпоновкиДанных.Равно;
		КонецЕсли;
		ЭлементОтбора.Использование    = Истина;
		ЭлементОтбора.РежимОтображения = РежимОтображенияЭлементаНастройкиКомпоновкиДанных.БыстрыйДоступ;
		ЭлементОтбора.ПравоеЗначение   = параметры.отборПоВалюте;
	КонецЕсли;
	
	Если параметры.Свойство("отборПоМетке") Тогда 
		Если не очистилиОтборы Тогда 
			Список.Отбор.Элементы.Очистить();
			очистилиОтборы = Истина;
		КонецЕсли;
		
		ЭлементОтбора = Список.Отбор.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных")); 
		ЭлементОтбора.ЛевоеЗначение    = Новый ПолеКомпоновкиДанных("Метка");
		Если ТипЗнч(Параметры.отборПоМетке) = тип("Массив") Тогда
			ЭлементОтбора.ВидСравнения     = ВидСравненияКомпоновкиДанных.ВСписке;
		Иначе
			ЭлементОтбора.ВидСравнения     = ВидСравненияКомпоновкиДанных.Равно;
		КонецЕсли;
		ЭлементОтбора.Использование    = Истина;
		ЭлементОтбора.РежимОтображения = РежимОтображенияЭлементаНастройкиКомпоновкиДанных.БыстрыйДоступ;
		ЭлементОтбора.ПравоеЗначение   = параметры.отборПоМетке;
	КонецЕсли;
	
	Если параметры.Свойство("отборПоПериоду") Тогда 
		Если не очистилиОтборы Тогда 
			Список.Отбор.Элементы.Очистить();
			очистилиОтборы = Истина;
		КонецЕсли;
		
		Если ЗначениеЗаполнено(параметры.отборПоПериоду.началоПериода) Тогда 
		ЭлементОтбора = Список.Отбор.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных")); 
		ЭлементОтбора.ЛевоеЗначение    = Новый ПолеКомпоновкиДанных("Дата");
		ЭлементОтбора.ВидСравнения     = ВидСравненияКомпоновкиДанных.БольшеИлиРавно;
		ЭлементОтбора.Использование    = Истина;
		ЭлементОтбора.РежимОтображения = РежимОтображенияЭлементаНастройкиКомпоновкиДанных.Обычный;
		ЭлементОтбора.ПравоеЗначение   = параметры.отборПоПериоду.началоПериода;
		КонецЕсли;
		
		Если ЗначениеЗаполнено(параметры.отборПоПериоду.КонецПериода) Тогда 
			ЭлементОтбора = Список.Отбор.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных")); 
			ЭлементОтбора.ЛевоеЗначение    = Новый ПолеКомпоновкиДанных("Дата");
			ЭлементОтбора.ВидСравнения     = ВидСравненияКомпоновкиДанных.МеньшеИлиРавно;
			ЭлементОтбора.Использование    = Истина;
			ЭлементОтбора.РежимОтображения = РежимОтображенияЭлементаНастройкиКомпоновкиДанных.Обычный;
			ЭлементОтбора.ПравоеЗначение   = параметры.отборПоПериоду.КонецПериода;
		КонецЕсли;
	КонецЕсли;
	
	Элементы.Список.НачальноеОтображениеСписка = НачальноеОтображениеСписка.Начало;
	
	УстановитьУсловноеОформление();
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура УдалитьОперацию(Команда)
	ДанныеОперации = УдалитьОперациюНаСервереПолучитьДанные();
	
	Если ДанныеОперации = Неопределено Тогда 
		Возврат;
	КонецЕсли;
	
	ПоказатьВопрос(Новый ОписаниеОповещения("ВопросУдалитьЗавершение", ЭтотОбъект),
	СтрШаблон(НСтр("ru = 'Вы уверены, что хотите удалить операцию на сумму %1?", ДанныеОперации)), РежимДиалогаВопрос.ДаНет);	
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаСервере
Процедура УстановитьУсловноеОформление()
	новЭлем = УсловноеОформление.Элементы.Добавить();
	ПолеЭлемента = новЭлем.Поля.Элементы.Добавить();
	ПолеЭлемента.Поле = новый ПолеКомпоновкиДанных(Элементы.Сумма.Имя);
	ПолеЭлемента = новЭлем.Поля.Элементы.Добавить();
	ПолеЭлемента.Поле = новый ПолеКомпоновкиДанных(Элементы.СуммаОбщиеЗатраты.Имя);
	ОтборЭлемента = новЭлем.Отбор.Элементы.Добавить(тип("ЭлементОтбораКомпоновкиДанных"));
	ОтборЭлемента.ЛевоеЗначение = новый ПолеКомпоновкиДанных("Список.ТипОперации");
	ОтборЭлемента.ВидСравнения = ВидСравненияКомпоновкиДанных.Равно;
	ОтборЭлемента.ПравоеЗначение = Перечисления.ТипыОпераций.Доход;
	новЭлем.Оформление.УстановитьЗначениеПараметра("ЦветТекста", WebЦвета.Зеленый);
	новЭлем.Использование = Истина;
	
	новЭлем = УсловноеОформление.Элементы.Добавить();
	ПолеЭлемента = новЭлем.Поля.Элементы.Добавить();
	ПолеЭлемента.Поле = новый ПолеКомпоновкиДанных(Элементы.Сумма.Имя);	
	ПолеЭлемента = новЭлем.Поля.Элементы.Добавить();
	ПолеЭлемента.Поле = новый ПолеКомпоновкиДанных(Элементы.СуммаОбщиеЗатраты.Имя);
	ОтборЭлемента = новЭлем.Отбор.Элементы.Добавить(тип("ЭлементОтбораКомпоновкиДанных"));
	ОтборЭлемента.ЛевоеЗначение = новый ПолеКомпоновкиДанных("Список.ТипОперации");
	ОтборЭлемента.ВидСравнения = ВидСравненияКомпоновкиДанных.Равно;
	ОтборЭлемента.ПравоеЗначение = Перечисления.ТипыОпераций.Расход;	
	новЭлем.Оформление.УстановитьЗначениеПараметра("ЦветТекста", WebЦвета.Красный);
	новЭлем.Использование = Истина;
	
	новЭлем = УсловноеОформление.Элементы.Добавить();
	ПолеЭлемента = новЭлем.Поля.Элементы.Добавить();
	ПолеЭлемента.Поле = новый ПолеКомпоновкиДанных(Элементы.Сумма.Имя);	
	ОтборЭлемента = новЭлем.Отбор.Элементы.Добавить(тип("ЭлементОтбораКомпоновкиДанных"));
	ОтборЭлемента.ЛевоеЗначение = новый ПолеКомпоновкиДанных("Список.ТипОперации");
	ОтборЭлемента.ВидСравнения = ВидСравненияКомпоновкиДанных.Равно;
	ОтборЭлемента.ПравоеЗначение = Перечисления.ТипыОпераций.Перевод;	
	новЭлем.Оформление.УстановитьЗначениеПараметра("ЦветТекста", WebЦвета.СветлоНебесноГолубой);	
	новЭлем.Использование = Истина;	
	
	новЭлем = УсловноеОформление.Элементы.Добавить();
	ПолеЭлемента = новЭлем.Поля.Элементы.Добавить();
	ПолеЭлемента.Поле = новый ПолеКомпоновкиДанных(Элементы.Дата.Имя);	
	ОтборЭлемента = новЭлем.Отбор.Элементы.Добавить(тип("ЭлементОтбораКомпоновкиДанных"));
	ОтборЭлемента.ЛевоеЗначение = новый ПолеКомпоновкиДанных("Список.Дата");
	ОтборЭлемента.ВидСравнения = ВидСравненияКомпоновкиДанных.БольшеИлиРавно;
	ОтборЭлемента.ПравоеЗначение = НачалоДня(ТекущаяДата());	
	новЭлем.Оформление.УстановитьЗначениеПараметра("Формат", "ДФ=ЧЧ:мм");	
	новЭлем.Использование = Истина;
	
	новЭлем = УсловноеОформление.Элементы.Добавить();
	ПолеЭлемента = новЭлем.Поля.Элементы.Добавить();
	ПолеЭлемента.Поле = новый ПолеКомпоновкиДанных(Элементы.Дата1.Имя);	
	ОтборЭлемента = новЭлем.Отбор.Элементы.Добавить(тип("ЭлементОтбораКомпоновкиДанных"));
	ОтборЭлемента.ЛевоеЗначение = новый ПолеКомпоновкиДанных("Список.Дата");
	ОтборЭлемента.ВидСравнения = ВидСравненияКомпоновкиДанных.БольшеИлиРавно;
	ОтборЭлемента.ПравоеЗначение = НачалоДня(ТекущаяДата());	
	новЭлем.Оформление.УстановитьЗначениеПараметра("Формат", "ДФ='дд МММ'");	
	новЭлем.Использование = Истина;
КонецПроцедуры

&НаСервере
Процедура УдалитьОперациюНаСервере()
	Если Элементы.Список.ТекущаяСтрока <> Неопределено Тогда 
		ОбъектОперация = Элементы.Список.ТекущаяСтрока.ссылка.получитьОбъект();
		ОбъектОперация.удалить();
	КонецЕсли;
КонецПроцедуры

&НаСервере
Функция УдалитьОперациюНаСервереПолучитьДанные()
	Если Элементы.Список.ТекущаяСтрока <> Неопределено Тогда 
		Возврат строка(Элементы.Список.ТекущаяСтрока.ссылка.сумма) + Элементы.Список.ТекущаяСтрока.ссылка.Кошелек.Валюта.КраткоеНаименование;
	КонецЕсли;
	
	Возврат Неопределено;
КонецФункции

&НаКлиенте
Процедура ВопросУдалитьЗавершение(Результат, ДопПараметры) Экспорт 
	
	Если Результат = КодВозвратаДиалога.Нет Тогда 
		Возврат;
	КонецЕсли;
	
	УдалитьОперациюНаСервере();
	
	Элементы.Список.Обновить();
	
	Оповестить("ОбновитьОстатки");
	
КонецПроцедуры

#КонецОбласти