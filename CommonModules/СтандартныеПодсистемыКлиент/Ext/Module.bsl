#Область ПрограммныйИнтерфейс

Процедура ПередНачаломРаботыСистемы(Знач ОповещениеЗавершения = Неопределено) Экспорт
	
	Если ПараметрыПриложения = Неопределено Тогда
		ПараметрыПриложения = Новый Соответствие;
	КонецЕсли;
	
	ПараметрыРаботыКлиентаПриЗапуске();
	
КонецПроцедуры

Процедура ПередЗавершениемРаботыСистемы(Отказ = Ложь, ТекстПредупреждения = "") Экспорт
	
	Предупреждения = Новый Массив;
	РезервноеКопированиеЧерезПочтуКлиент.ПередЗавершениемРаботыСистемы(Отказ, Предупреждения);
	
	Если Предупреждения.Количество() = 0 Тогда
		//Если Не ПараметрКлиента("ЗапрашиватьПодтверждениеПриЗавершенииПрограммы") Тогда
			Возврат;
		//КонецЕсли;
		ТекстПредупреждения = НСтр("ru = 'Завершить работу с программой?'");
		Отказ = Истина;
	Иначе
		Отказ = Истина;
		МассивПредупреждений = Новый Массив;
		Для Каждого Предупреждение Из Предупреждения Цикл
			МассивПредупреждений.Добавить(Предупреждение.ТекстПредупреждения);
		КонецЦикла;
		Если Не ПустаяСтрока(ТекстПредупреждения) Тогда
			ТекстПредупреждения = ТекстПредупреждения + Символы.ПС;
		КонецЕсли;
		ТекстПредупреждения = ТекстПредупреждения + СтрСоединить(МассивПредупреждений, Символы.ПС);
		ПодключитьОбработчикОжидания("ПоказатьПредупрежденияПриЗавершенииРаботы", 0.1, Истина);
	КонецЕсли;
	УстановитьПараметрКлиента("ПредупрежденияПриЗавершенииРаботы", Предупреждения);
	
КонецПроцедуры

Функция ПредупреждениеПриЗавершенииРаботы() Экспорт
	
	ДействиеПриУстановленномФлажке = Новый Структура;
	ДействиеПриУстановленномФлажке.Вставить("Форма", "");
	ДействиеПриУстановленномФлажке.Вставить("ПараметрыФормы", Неопределено);
	
	ДействиеПриНажатииГиперссылки = Новый Структура;
	ДействиеПриНажатииГиперссылки.Вставить("Форма", "");
	ДействиеПриНажатииГиперссылки.Вставить("ПараметрыФормы", Неопределено);
	ДействиеПриНажатииГиперссылки.Вставить("ПрикладнаяФормаПредупреждения", "");
	ДействиеПриНажатииГиперссылки.Вставить("ПараметрыПрикладнойФормыПредупреждения", Неопределено);
	ДействиеПриНажатииГиперссылки.Вставить("РежимОткрытияОкна", Неопределено);
	
	ПараметрыПредупреждения = Новый Структура;
	ПараметрыПредупреждения.Вставить("ТекстФлажка", "");
	ПараметрыПредупреждения.Вставить("ПоясняющийТекст", "");
	ПараметрыПредупреждения.Вставить("ТекстПредупреждения", "");
	ПараметрыПредупреждения.Вставить("РасширеннаяПодсказка", "");
	ПараметрыПредупреждения.Вставить("ТекстГиперссылки", "");
	ПараметрыПредупреждения.Вставить("ДействиеПриУстановленномФлажке", ДействиеПриУстановленномФлажке);
	ПараметрыПредупреждения.Вставить("ДействиеПриНажатииГиперссылки", ДействиеПриНажатииГиперссылки);
	ПараметрыПредупреждения.Вставить("Приоритет", 0);
	ПараметрыПредупреждения.Вставить("ВывестиОдноПредупреждение", Ложь);
	
	Возврат ПараметрыПредупреждения;
	
КонецФункции

Функция ПараметрыРаботыКлиентаПриЗапуске() Экспорт
	
	Возврат СтандартныеПодсистемыКлиентПовтИсп.ПараметрыРаботыКлиентаПриЗапуске();
	
КонецФункции

#КонецОбласти

#Область СлужебныйПрограммныйИнтерфейс

Функция ПараметрКлиента(ИмяПараметра = Неопределено) Экспорт
	
	ИмяГлобальногоПараметра = "СтандартныеПодсистемы.ПараметрыКлиента";
	ПараметрыКлиента = ПараметрыПриложения[ИмяГлобальногоПараметра];
	
	Если ПараметрыКлиента = Неопределено Тогда
		// Заполнение постоянных параметров клиента.
		СтандартныеПодсистемыКлиентПовтИсп.ПараметрыРаботыКлиентаПриЗапуске();
	КонецЕсли;
	
	Если ИмяПараметра = Неопределено Тогда
		Возврат ПараметрыКлиента;
	Иначе
		Возврат ПараметрыКлиента[ИмяПараметра];
	КонецЕсли;
	
КонецФункции

Процедура УстановитьПараметрКлиента(ИмяПараметра, Значение) Экспорт
	ИмяГлобальногоПараметра = "СтандартныеПодсистемы.ПараметрыКлиента";
	ПараметрыПриложения[ИмяГлобальногоПараметра].Вставить(ИмяПараметра, Значение);
КонецПроцедуры

Процедура ЗаполнитьПараметрыКлиента(ПараметрыКлиента) Экспорт
	
	ИмяПараметра = "СтандартныеПодсистемы.ПараметрыКлиента";
	Если ТипЗнч(ПараметрыПриложения[ИмяПараметра]) <> Тип("Структура") Тогда
		ПараметрыПриложения[ИмяПараметра] = Новый Структура;
		ПараметрыПриложения[ИмяПараметра].Вставить("НеобходимаВыгрузкаРезервнойКопииНаПочту");
		ПараметрыПриложения[ИмяПараметра].Вставить("ТекстОтносительнойДатыРезервнойКопии");
	КонецЕсли;
	
	ЗаполнитьЗначенияСвойств(ПараметрыПриложения[ИмяПараметра], ПараметрыКлиента);
	
КонецПроцедуры

#КонецОбласти