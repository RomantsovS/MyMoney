#Область ПрограммныйИнтерфейс

Процедура ДиаграммаВыбор(Форма, Элемент, ЗначениеДиаграммы, СтандартнаяОбработка) Экспорт 
	
	Если Форма.ТекУровеньГруппировки + 1 = Форма.МаксУровеньГруппировки Тогда 
		Возврат;
	КонецЕсли;
	
	СтандартнаяОбработка = Ложь;
	
	Если Форма.ДиаграммаПеревернута Тогда 
		Если ТипЗнч(ЗначениеДиаграммы.Точка.Значение) = Тип("СправочникСсылка.Валюты") Тогда 
			Форма.ОтборДопВалюта.Добавить(ЗначениеДиаграммы.Точка.Значение);
		ИначеЕсли ТипЗнч(ЗначениеДиаграммы.Точка.Значение) = Тип("СправочникСсылка.Кошельки") Тогда 
			Форма.ОтборДопКошелек.Добавить(ЗначениеДиаграммы.Серия.Значение);
		ИначеЕсли ТипЗнч(ЗначениеДиаграммы.Точка.Значение) = Тип("СправочникСсылка.Метки") Тогда 
			Форма.ОтборДопМетка.Добавить(ЗначениеДиаграммы.Точка.Значение);
		ИначеЕсли ТипЗнч(ЗначениеДиаграммы.Точка.Значение) = Тип("СправочникСсылка.Статьи") Тогда 
			Форма.ОтборДопСтатья.Добавить(ЗначениеДиаграммы.Точка.Значение);
		ИначеЕсли ТипЗнч(ЗначениеДиаграммы.Точка.Значение) = Тип("ПеречислениеСсылка.ТипыОпераций") Тогда 
			Форма.ОтборДопТипОперации.Добавить(ЗначениеДиаграммы.Точка.Значение);
		КонецЕсли;
		
		Форма.МасОтборТекУровень.Добавить(ЗначениеДиаграммы.Точка.Значение);
	Иначе
		Если ТипЗнч(ЗначениеДиаграммы.Серия.Значение) = Тип("СправочникСсылка.Валюты") Тогда 
			Форма.ОтборДопВалюта.Добавить(ЗначениеДиаграммы.Серия.Значение);
		ИначеЕсли ТипЗнч(ЗначениеДиаграммы.Серия.Значение) = Тип("СправочникСсылка.Кошельки") Тогда 
			Форма.ОтборДопКошелек.Добавить(ЗначениеДиаграммы.Серия.Значение);
		ИначеЕсли ТипЗнч(ЗначениеДиаграммы.Серия.Значение) = Тип("СправочникСсылка.Метки") Тогда 
			Форма.ОтборДопМетка.Добавить(ЗначениеДиаграммы.Серия.Значение);
		ИначеЕсли ТипЗнч(ЗначениеДиаграммы.Серия.Значение) = Тип("СправочникСсылка.Статьи") Тогда 
			Форма.ОтборДопСтатья.Добавить(ЗначениеДиаграммы.Серия.Значение);
		ИначеЕсли ТипЗнч(ЗначениеДиаграммы.Серия.Значение) = Тип("ПеречислениеСсылка.ТипыОпераций") Тогда 
			Форма.ОтборДопТипОперации.Добавить(ЗначениеДиаграммы.Серия.Значение);
		КонецЕсли;
		
		Форма.МасОтборТекУровень.Добавить(ЗначениеДиаграммы.Серия.Значение);
	КонецЕсли;
	
	Форма.ТекУровеньГруппировки = Форма.ТекУровеньГруппировки + 1;
	
	Форма.ОбновитьДиаграммуСервер();
	
КонецПроцедуры

Процедура ОбработкаРасшифровки(Форма, Элемент, Расшифровка, АдресДанныхРасшифровки, СтандартнаяОбработка, ДопПараметры = Неопределено) Экспорт 
	
	Парам = Новый Структура;
	
	СтандартнаяОбработка = Ложь;
	
	ДанныеРасшифровкиОтчета = ОтчетыСКД.ДанныеРасшифровкиОтчета(Расшифровка, АдресДанныхРасшифровки);
	
	Если ДанныеРасшифровкиОтчета.ПоляРасшифровки.Свойство("Регистратор") Тогда 
		ПоказатьЗначение(, ДанныеРасшифровкиОтчета.ПоляРасшифровки.Регистратор);		
		
		Возврат;
	КонецЕсли;
	
	Если ДанныеРасшифровкиОтчета.ПоляРасшифровкиРодители.Свойство("Валюта") Тогда 
		Парам.Вставить("ОтборПоВалюте", ДанныеРасшифровкиОтчета.ПоляРасшифровкиРодители.Валюта);
	ИначеЕсли ОбщегоНазначенияКлиентСервер.ЕстьРеквизитОбъекта(Форма, "ОтборВалюта") И Форма.ОтборВалюта.Количество() > 0 Тогда 
		Парам.Вставить("ОтборПоВалюте", Форма.ОтборВалюта.ВыгрузитьЗначения());		
	КонецЕсли;
	
	Если ДанныеРасшифровкиОтчета.ПоляРасшифровкиРодители.Свойство("Кошелек") Тогда 
		Парам.Вставить("ОтборПоКошельку", ДанныеРасшифровкиОтчета.ПоляРасшифровкиРодители.Кошелек);
	ИначеЕсли ОбщегоНазначенияКлиентСервер.ЕстьРеквизитОбъекта(Форма, "ОтборКошелек") И Форма.ОтборКошелек.Количество() > 0 Тогда 
		Парам.Вставить("ОтборПоКошельку", Форма.ОтборКошелек.ВыгрузитьЗначения());		
	КонецЕсли;
	
	Если ДанныеРасшифровкиОтчета.ПоляРасшифровкиРодители.Свойство("Метка") Тогда 
		Парам.Вставить("ОтборПоМетке", ДанныеРасшифровкиОтчета.ПоляРасшифровкиРодители.Метка);
	ИначеЕсли ОбщегоНазначенияКлиентСервер.ЕстьРеквизитОбъекта(Форма, "ОтборМетка") И Форма.ОтборМетка.Количество() > 0 Тогда 
		Парам.Вставить("ОтборПоМетке", Форма.ОтборМетка.ВыгрузитьЗначения());		
	КонецЕсли;
	
	Если ДанныеРасшифровкиОтчета.ПоляРасшифровкиРодители.Свойство("Статья") Тогда 
		Парам.Вставить("ОтборПоСтатье", ДанныеРасшифровкиОтчета.ПоляРасшифровкиРодители.Статья);
	ИначеЕсли ОбщегоНазначенияКлиентСервер.ЕстьРеквизитОбъекта(Форма, "ОтборСтатья") И Форма.ОтборСтатья.Количество() > 0 Тогда 
		Парам.Вставить("ОтборПоСтатье", Форма.ОтборСтатья.ВыгрузитьЗначения());		
	КонецЕсли;
	
	Если ДанныеРасшифровкиОтчета.ПоляРасшифровкиРодители.Свойство("ТипОперации") Тогда 
		Парам.Вставить("ОтборПоТипуОперации", ДанныеРасшифровкиОтчета.ПоляРасшифровкиРодители.ТипОперации);
	ИначеЕсли ОбщегоНазначенияКлиентСервер.ЕстьРеквизитОбъекта(Форма, "ОтборТипОперации") И Форма.ОтборТипОперации.Количество() > 0 Тогда 
		Парам.Вставить("ОтборПоТипуОперации", Форма.ОтборТипОперации.ВыгрузитьЗначения());		
	КонецЕсли;
	
	Если ДанныеРасшифровкиОтчета.ПоляРасшифровкиРодители.Свойство("ФизЛицо") Тогда 
		Парам.Вставить("ОтборПоФизлицу", ДанныеРасшифровкиОтчета.ПоляРасшифровкиРодители.Физлицо);
	ИначеЕсли ОбщегоНазначенияКлиентСервер.ЕстьРеквизитОбъекта(Форма, "ОтборФизлицо") И Форма.ОтборФизлицо.Количество() > 0 Тогда 
		Парам.Вставить("ОтборПоФизлицу", Форма.ОтборФизлицо.ВыгрузитьЗначения());		
	КонецЕсли;
	
	ПериодПарам = Новый Структура("НачалоПериода, КонецПериода", Дата(1,1,1), Дата(1,1,1));
	ТекПериодПарам = Новый Структура("НачалоПериода, КонецПериода", Дата(1,1,1), Дата(1,1,1));
	ИдентификаторПериода = "";
	
	Если ДанныеРасшифровкиОтчета.ПоляРасшифровки.Свойство("Сумма2") Тогда 
		ИдентификаторПериода = "2";
	КонецЕсли;
	
	Если ДанныеРасшифровкиОтчета.ПараметрыДанных.Свойство("Период" + ИдентификаторПериода) Тогда 
		ПериодПарам.Вставить("НачалоПериода", ДанныеРасшифровкиОтчета.ПараметрыДанных["Период" + ИдентификаторПериода].ДатаНачала);
		ПериодПарам.Вставить("КонецПериода", ДанныеРасшифровкиОтчета.ПараметрыДанных["Период" + ИдентификаторПериода].ДатаОкончания);
	КонецЕсли;
	
	Если ДанныеРасшифровкиОтчета.ПараметрыДанных.Свойство("Периодичность") И 
		ДанныеРасшифровкиОтчета.ПоляРасшифровкиРодители.Свойство("Период") И
		ДанныеРасшифровкиОтчета.ПараметрыДанных.Периодичность <> ПредопределенноеЗначение("Перечисление.Периодичность.Регистратор") Тогда 
		
		ТекПериодПарам = ОтчетыСКД.ПолучитьДанныеПериодаПоПериодичности(ДанныеРасшифровкиОтчета.ПоляРасшифровкиРодители.Период,
		ДанныеРасшифровкиОтчета.ПараметрыДанных.Периодичность);	
	ИначеЕсли ДанныеРасшифровкиОтчета.ПоляРасшифровкиРодители.Свойство("ПериодМесяц") Тогда 
		ТекПериодПарам = ОтчетыСКД.ПолучитьДанныеПериодаПоПериодичности(ДанныеРасшифровкиОтчета.ПоляРасшифровкиРодители.ПериодМесяц, "Месяц");
	КонецЕсли;
	
	ПериодПарамИтог = Новый Структура;
	ПериодПарамИтог.Вставить("НачалоПериода", Макс(ПериодПарам.НачалоПериода, ТекПериодПарам.НачалоПериода));
	ПериодПарамИтог.Вставить("КонецПериода", Мин(ПериодПарам.КонецПериода, ТекПериодПарам.КонецПериода));
	
	Если ЗначениеЗаполнено(ПериодПарамИтог.НачалоПериода) Или ЗначениеЗаполнено(ПериодПарамИтог.КонецПериода) Тогда 
		Парам.Вставить("ОтборПоПериоду", ПериодПарамИтог);
	КонецЕсли;
	
	Если ДопПараметры <> Неопределено Тогда 
		Если ДопПараметры.Свойство("ОтборПоТипуОперации") Тогда 
			Парам.Вставить("ОтборПоТипуОперации", ДопПараметры.ОтборПоТипуОперации);
		КонецЕсли;
	КонецЕсли;
	
	ОткрытьФорму("Документ.Операция.ФормаСписка", Парам, Форма);
	
КонецПроцедуры

#КонецОбласти