#Область ПрограммныйИнтерфейс

// Формирует и выводит сообщение, которое может быть связано с элементом управления формы.
//
// См. ОбщегоНазначения.СообщитьПользователю
//
// Параметры:
//  ТекстСообщенияПользователю - Строка - текст сообщения.
//  КлючДанных - ЛюбаяСсылка - объект или ключ записи информационной базы, к которому это сообщение относится.
//  Поле - Строка - наименование реквизита формы.
//  ПутьКДанным - Строка - путь к данным (путь к реквизиту формы).
//  Отказ - Булево - выходной параметр, всегда устанавливается в значение Истина.
//
// Пример:
//
//  1. Для вывода сообщения у поля управляемой формы, связанного с реквизитом объекта:
//  ОбщегоНазначенияКлиент.СообщитьПользователю(
//   НСтр("ru = 'Сообщение об ошибке.'"), ,
//   "ПолеВРеквизитеФормыОбъект",
//   "Объект");
//
//  Альтернативный вариант использования в форме объекта:
//  ОбщегоНазначенияКлиент.СообщитьПользователю(
//   НСтр("ru = 'Сообщение об ошибке.'"), ,
//   "Объект.ПолеВРеквизитеФормыОбъект");
//
//  2. Для вывода сообщения рядом с полем управляемой формы, связанным с реквизитом формы:
//  ОбщегоНазначенияКлиент.СообщитьПользователю(
//   НСтр("ru = 'Сообщение об ошибке.'"), ,
//   "ИмяРеквизитаФормы");
//
//  3. Для вывода сообщения связанного с объектом информационной базы:
//  ОбщегоНазначенияКлиент.СообщитьПользователю(
//   НСтр("ru = 'Сообщение об ошибке.'"), ОбъектИнформационнойБазы, "Ответственный",,Отказ);
//
//  4. Для вывода сообщения по ссылке на объект информационной базы:
//  ОбщегоНазначенияКлиент.СообщитьПользователю(
//   НСтр("ru = 'Сообщение об ошибке.'"), Ссылка, , , Отказ);
//
//  Случаи некорректного использования:
//   1. Передача одновременно параметров КлючДанных и ПутьКДанным.
//   2. Передача в параметре КлючДанных значения типа отличного от допустимого.
//   3. Установка ссылки без установки поля (и/или пути к данным).
//
Процедура СообщитьПользователю(
	Знач ТекстСообщенияПользователю,
	Знач КлючДанных = Неопределено,
	Знач Поле = "",
	Знач ПутьКДанным = "",
	Отказ = Ложь) Экспорт
	
	ОбщегоНазначенияСлужебныйКлиентСервер.СообщитьПользователю(
	ТекстСообщенияПользователю,
	КлючДанных,
	Поле,
	ПутьКДанным,
	Отказ);
	
КонецПроцедуры
	
Процедура ПередНачаломРаботыСистемы(Отказ) Экспорт 
	ПервыйЗапуск = ОбщегоНазначенияВызовСервера.ОбработатьЗапускПриложения();
	
	Если ПервыйЗапуск Тогда
		
		//ПодключитьОбработчикОжидания("Подключаемый_НастроитьРежимСинхронизации", 0.2, Истина);
		
	КонецЕсли;
	
	ОбщегоНазначенияВызовСервера.ОбновитьПриложение();
	ОбщегоНазначенияВызовСервера.УстановитьОриентациюЭкрана();
КонецПроцедуры

Процедура ПриНачалеРаботыСистемыВывестиСообщениеУстановкиПароля(Оповещение) Экспорт 
	Если ОбщегоНазначенияВызовСервера.ПарольДляВхода() = "" и ОбщегоНазначенияВызовСервера.НеПоказыватьСообщениеУстановкиПароля() Тогда 
		ПараметрыФормы = Новый Структура;
		
		ПараметрыФормы.Вставить("ЗаголовокФормы", НСтр("ru='Сообщение'"));
		ПараметрыФормы.Вставить("Текст", НСтр("ru='Рекомендуем установить пароль на приложение в настройках'"));
		ПараметрыФормы.Вставить("БольшеНеПоказыватьЧто", "БольшеНеПоказыватьУстановкуПароля");
		
		ОткрытьФорму("Обработка.Настройки.Форма.ФормаСообщения", ПараметрыФормы, , , , , Оповещение, РежимОткрытияОкнаФормы.БлокироватьОкноВладельца);
	Иначе
		ВыполнитьОбработкуОповещения(Оповещение);
	КонецЕсли;
КонецПроцедуры

Процедура ПриНачалеРаботыСистемыЗагрузитьКурсыВалют(Оповещение, ИдентификаторЗадания) Экспорт 
	Если ОбщегоНазначенияВызовСервера.ПриНачалеРаботыСистемыПроверитьНеобходимостьЗагрузкиКурсов(ИдентификаторЗадания) Тогда 
		ОткрытьФорму("Обработка.ЗагрузкаКурсовВалют.Форма.Форма", , , , , , Оповещение);
		Возврат;
	КонецЕсли;
	
	ВыполнитьОбработкуОповещения(Оповещение);
КонецПроцедуры

#КонецОбласти