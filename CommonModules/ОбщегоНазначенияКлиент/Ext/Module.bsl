Процедура ПередНачаломРаботыСистемы(Отказ) Экспорт 
	ПервыйЗапуск = ОбщегоНазначенияВызовСервера.ОбработатьЗапускПриложения();
	
	Если ПервыйЗапуск Тогда
		
		//ПодключитьОбработчикОжидания("Подключаемый_НастроитьРежимСинхронизации", 0.2, Истина);
		
	КонецЕсли;
	
	ОбщегоНазначенияВызовСервера.ОбновитьПриложение();
	ОбщегоНазначенияВызовСервера.УстановитьОриентациюЭкрана();
КонецПроцедуры

Процедура ПриНачалеРаботыСистемыВывестиСообщениеУстановкиПароля(Оповещение) Экспорт 
	Если ОбщегоНазначенияВызовСервера.ПарольДляВхода() = "" и ОбщегоНазначенияВызовСервера.НеПоказыватьСообщениеУстановкиПароля() Тогда 
		ПараметрыФормы = Новый Структура;
		
		ПараметрыФормы.Вставить("ЗаголовокФормы", НСтр("ru='Сообщение'"));
		ПараметрыФормы.Вставить("Текст", НСтр("ru='Рекомендуем установить пароль на приложение в настройках'"));
		ПараметрыФормы.Вставить("БольшеНеПоказыватьЧто", "БольшеНеПоказыватьУстановкуПароля");
		
		ОткрытьФорму("Обработка.Настройки.Форма.ФормаСообщения", ПараметрыФормы, , , , , Оповещение, РежимОткрытияОкнаФормы.БлокироватьОкноВладельца);
	Иначе
		ВыполнитьОбработкуОповещения(Оповещение);
	КонецЕсли;
КонецПроцедуры

Процедура ПриНачалеРаботыСистемыЗагрузитьКурсыВалют(Оповещение) Экспорт 
	Если ОбщегоНазначенияВызовСервера.ПриНачалеРаботыСистемыПроверитьНеобходимостьЗагрузкиКурсов() Тогда 
		ОткрытьФорму("Обработка.ЗагрузкаКурсовВалют.Форма.Форма", , , , , , Оповещение);
		Возврат;
	КонецЕсли;
	
	ВыполнитьОбработкуОповещения(Оповещение);
КонецПроцедуры