
#Область ПрограммныйИнтерфейс

Функция ОпределитьНеобходимостьОбновления() Экспорт
	
	Попытка
		СписокОбработчиковОбновления = ПолучитьСписокОбработчиковОбновленияТекущейВерсии();
	Исключение
		ОбщегоНазначения.СообщитьПользователю(ОписаниеОшибки());
		Возврат Ложь;
	КонецПопытки;
	
	Возврат НЕ СписокОбработчиковОбновления.Количество() = 0;
	
КонецФункции

Процедура ОбновитьБазуДанных(Отказ, Лог) Экспорт
	
	НоваяВерсияПриложения = Метаданные.Версия;
	
	СписокОбработчиков = ПолучитьСписокОбработчиковОбновленияТекущейВерсии();
	
	Попытка
		
		Для Каждого Обработчик Из СписокОбработчиков Цикл
			
			Если Обработчик = "1.1.17.1" Тогда
				ВыполнитьОбновление1_1_17(Лог);
			ИначеЕсли Обработчик = "1.1.18.1" Тогда
				ВыполнитьОбновление1_1_18(Лог);
			ИначеЕсли Обработчик = "1.1.25.1" Тогда
				ВыполнитьОбновление1_1_25(Лог);
			КонецЕсли;
			
		КонецЦикла;
		
		Константы.ТекущаяВерсияПриложения.Установить(НоваяВерсияПриложения);
		ОбновитьПовторноИспользуемыеЗначения();
		
	Исключение
		
		Отказ = Истина;
		Лог = ОписаниеОшибки();
		
	КонецПопытки;
	
	ПараметрыСеанса.ОбновлениеБД = Ложь;
	
КонецПроцедуры

#КонецОбласти

#Область ПроцедурыОбновления

Процедура ВыполнитьОбновление1_1_17(Лог)
	Запрос = Новый Запрос("ВЫБРАТЬ
	|	Долги.Регистратор КАК Регистратор
	|ИЗ
	|	РегистрНакопления.Долги КАК Долги
	|ГДЕ
	|	Долги.Валюта = ЗНАЧЕНИЕ(справочник.валюты.)
	|
	|УПОРЯДОЧИТЬ ПО
	|	Регистратор");
	Рез = Запрос.Выполнить();
	
	Если Рез.Пустой() Тогда 
		Возврат;
	КонецЕсли;
	
	Валюта = ЗначениеНастроекПовтИсп.ПолучитьЗначениеКонстанты("ВалютаУчета");
	
	Если не ЗначениеЗаполнено(Валюта) Тогда 
		ВызватьИсключение НСтр("ru = 'Не указана Валюта учета'")
	КонецЕсли;
	
	Выборка = Рез.Выбрать();
	
	Пока Выборка.Следующий() Цикл
		Набор = РегистрыНакопления.Долги.СоздатьНаборЗаписей();
		Набор.Отбор.Регистратор.Установить(Выборка.Регистратор);
		Набор.Прочитать();
		
		Для Каждого Строка Из Набор Цикл
			Строка.Валюта = Валюта;
		КонецЦикла;
		
		Набор.Записать();
	КонецЦикла;
КонецПроцедуры

Процедура ВыполнитьОбновление1_1_18(Лог)
	Запрос = Новый Запрос("ВЫБРАТЬ
	|	Операция.Ссылка,
	|	Операция.Кошелек.Валюта
	|ИЗ
	|	Документ.Операция КАК Операция
	|ГДЕ
	|	Операция.Валюта = ЗНАЧЕНИЕ(справочник.валюты.)
	|
	|УПОРЯДОЧИТЬ ПО
	|	Операция.Дата");
	РезультатЗапроса = Запрос.Выполнить().Выбрать();
	
	Валюта = ЗначениеНастроекПовтИсп.ПолучитьЗначениеКонстанты("ВалютаУчета");
	
	Пока РезультатЗапроса.Следующий() Цикл
		ДокументОбъект = РезультатЗапроса.Ссылка.ПолучитьОбъект();
		ДокументОбъект.Валюта = РезультатЗапроса.КошелекВалюта;
		
		Если Не ЗначениеЗаполнено(ДокументОбъект.Валюта) Тогда 
			ДокументОбъект.Валюта = Валюта;
		КонецЕсли;
		
		ДокументОбъект.Записать(РежимЗаписиДокумента.Проведение);
	КонецЦикла;
КонецПроцедуры

Процедура ВыполнитьОбновление1_1_25(Лог)
	Запрос = Новый Запрос("ВЫБРАТЬ
	|	Операция.Ссылка КАК СсылкаРасход,
	|	Операция1.Ссылка КАК СсылкаДолг,
	|	Операция1.ФизЛицо КАК ФизЛицо
	|ИЗ
	|	Документ.Операция КАК Операция
	|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.Операция КАК Операция1
	|		ПО Операция.Дата = Операция1.Дата
	|			И Операция.Сумма = Операция1.Сумма
	|			И ((ВЫРАЗИТЬ(Операция.Комментарий КАК СТРОКА(100))) = (ВЫРАЗИТЬ(Операция1.Комментарий КАК СТРОКА(100))))
	|			И Операция.Метка = Операция1.Метка
	|ГДЕ
	|	Операция.ТипОперации = ЗНАЧЕНИЕ(Перечисление.ТипыОпераций.Расход)
	|	И Операция1.ТипОперации = ЗНАЧЕНИЕ(Перечисление.ТипыОпераций.Долги)
	|	И Операция.Метка <> ЗНАЧЕНИЕ(Справочник.Метки.)
	|
	|УПОРЯДОЧИТЬ ПО
	|	Операция.Дата");
	МассивРез = Запрос.ВыполнитьПакет();
	
	Если МассивРез[0].Пустой() Тогда 
		Возврат;
	КонецЕсли;
	
	Выборка = МассивРез[0].Выбрать();
	
	Пока Выборка.Следующий() Цикл
		Объект = Выборка.СсылкаРасход.ПолучитьОбъект();
		Объект.СуммаДолг = Объект.Сумма;
		Объект.Сумма = Объект.Сумма * 2;
		Объект.СуммаОбщиеЗатраты = Объект.Сумма;
		Объект.ОбщиеЗатраты = Истина;
		Объект.ФизЛицо = Выборка.Физлицо;
		
		Объект.Записать(РежимЗаписиДокумента.Проведение);
		
		Объект = Выборка.СсылкаДолг.ПолучитьОбъект();
		Объект.Удалить();
	КонецЦикла;
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

Функция СписокОбработчиковОбновления()
	
	СписокОбработчиков = Новый Массив;
	СписокОбработчиков.Добавить("1.1.17");
	СписокОбработчиков.Добавить("1.1.18");
	СписокОбработчиков.Добавить("1.1.25");
	
	Возврат СписокОбработчиков;
	
КонецФункции

Функция ПолучитьСписокОбработчиковОбновленияТекущейВерсии()
	
	СписокОбработчиковОбновления = Новый Массив;
	
	ТекущаяВерсия = ЗначениеНастроекВызовСервераПовтИсп.ТекущаяВерсияПриложения();
	СписокОбработчиков = СписокОбработчиковОбновления();
	
	Для Каждого Обработчик Из СписокОбработчиков Цикл
		
		Если ОбщегоНазначения.СравнитьВерсии(ТекущаяВерсия, Обработчик) < 0 Тогда
			СписокОбработчиковОбновления.Добавить(Обработчик);
		КонецЕсли;
		
	КонецЦикла;
	
	Возврат СписокОбработчиковОбновления;
	
КонецФункции

#КонецОбласти