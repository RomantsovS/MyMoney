#Область ПрограммныйИнтерфейс

// Сохраняет настройку в хранилище общих настроек.
// 
// Параметры:
//   КлючОбъекта         - Строка - Ключ объекта настройки. 
//   КлючНастроек        - Строка - Ключ сохраняемых настроек.
//   ЗначениеПоУмолчанию - (*)    - Значение, которое необходимо подставить Если настройки не были загружены.
//   Значение            - Произвольный - Значение настроек. При сохранении преобразуется в ХранилищеЗначения. При чтении восстанавливается из ХранилищеЗначения.
//   Представление       - Строка - Представление настроек. Если передано значение Неопределено, в данный параметр будет возвращено автоматически сформированное представление.
// 
Процедура ОбщиеНастройкиСохранить(КлючОбъекта, КлючНастроек = Неопределено, Значение) Экспорт	
	
	Запись = РегистрыСведений.ОбщиеНастройки.СоздатьМенеджерЗаписи();
	Запись.КлючОбъекта = КлючОбъекта;
	Запись.КлючНастроек = КлючНастроек;
	
	Если ЭтоАдресВременногоХранилища(Значение) Тогда 
		ДанныеХранилища = ПолучитьИзВременногоХранилища(Значение);
		Запись.Настройки = Новый ХранилищеЗначения(ДанныеХранилища);
	Иначе
		Запись.Настройки = Новый ХранилищеЗначения(Значение);
	КонецЕсли;
	
	Запись.Записать();	
	
КонецПроцедуры

// Загружает настройку из хранилища общих настроек.
//
// Параметры:
//   Представление - Строка - В данный параметр возвращается представление настроек.
//   см. параметры функции ОбщиеНастройкиСохранить()
//
Функция ОбщиеНастройкиЗагрузить(КлючОбъекта, КлючНастроек = Неопределено, ЗначениеПоУмолчанию = Неопределено) Экспорт
	
	Запись = РегистрыСведений.ОбщиеНастройки.СоздатьМенеджерЗаписи();
	Запись.КлючОбъекта  = КлючОбъекта;
	Запись.КлючНастроек = КлючНастроек;
	Запись.Прочитать();
	
	Если НЕ Запись.Выбран() Тогда
		Возврат ЗначениеПоУмолчанию;
		
	Иначе		
		Попытка
			
			Результат = Запись.Настройки.Получить();
			
			//Проверим, соответствует ли тип сохраненных настроек типу значения по умолчанию
			Если ЗначениеПоУмолчанию <> Неопределено И ТипЗнч(Результат) <> ТипЗнч(ЗначениеПоУмолчанию) Тогда
				// в Текущей версии требуется другой тип сохраненных значений
				Возврат ЗначениеПоУмолчанию;
			КонецЕсли;
			
			//Для структур проверим наличие всех нужных ключей, т.к. состав мог быть изменен при обновлении версии конфигурации
			Если ТипЗнч(ЗначениеПоУмолчанию) = Тип("Структура") И ТипЗнч(Результат) = Тип("Структура") Тогда
				Для Каждого КлючИЗначение Из ЗначениеПоУмолчанию Цикл
					Если НЕ Результат.Свойство(КлючИЗначение.Ключ) Тогда
						Результат.Вставить(КлючИЗначение.Ключ, КлючИЗначение.Значение);
					КонецЕсли;
				КонецЦикла;
			КонецЕсли;
			
			Возврат Результат;
			
		Исключение
			
			// Значение невозможно восстановить
			ТекстСообщения = НСтр("ru = 'Значение настроек ''%1''.''%2'' не может быть восстановлено по причине:'");
			ТекстСообщения = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(ТекстСообщения, КлючОбъекта, КлючНастроек);
			ТекстСообщения = ТекстСообщения + Символы.ПС + ПодробноеПредставлениеОшибки(ИнформацияОбОшибке());
			Сообщить(ТекстСообщения);
			
			Возврат ЗначениеПоУмолчанию;
			
		КонецПопытки;		
	КонецЕсли;	
	
КонецФункции

Функция НастройкиЗагрузитьПоОбъекту(КлючОбъекта) Экспорт 
	
	наборЗ = РегистрыСведений.ОбщиеНастройки.СоздатьНаборЗаписей();
	наборЗ.отбор.КлючОбъекта.установить(КлючОбъекта);
	
	наборЗ.Прочитать();
	
	спис = новый СписокЗначений;
	
	Для Каждого стр из наборЗ Цикл
		спис.Добавить(стр.Настройки, стр.КлючНастроек);
	КонецЦикла;
	
	Возврат спис;
	
КонецФункции

// Удаляет настройку из хранилища общих настроек.
//
// Параметры:
//   см. параметры функции ОбщиеНастройкиСохранить()
//
Процедура ОбщиеНастройкиУдалить(КлючОбъекта, КлючНастроек) Экспорт	
	
	Запись = РегистрыСведений.ОбщиеНастройки.СоздатьМенеджерЗаписи();
	Запись.КлючОбъекта  = КлючОбъекта;
	Запись.КлючНастроек = КлючНастроек;
	Запись.Удалить();	
	
КонецПроцедуры

Процедура ОбщиеНастройкиСохранитьНастройкуОтчетаПриЗакрытии(КлючОбъекта, СтруктураНастроек) Экспорт 
	
	Запрос = Новый Запрос("ВЫБРАТЬ
	|	КлючНастроек.Ссылка
	|ИЗ
	|	Справочник.КлючНастроек КАК КлючНастроек
	|ГДЕ
	|	КлючНастроек.КлючОбъекта = &КлючОбъекта
	|	И КлючНастроек.Код = &Код");
	Запрос.УстановитьПараметр("КлючОбъекта", КлючОбъекта);
	Запрос.УстановитьПараметр("Код", "НастройкаПриЗакрытии");
	
	Выборка = Запрос.Выполнить().Выбрать();
	
	Если Выборка.Следующий() Тогда 
		КлючНастроек = Выборка.Ссылка;
	Иначе
		НовКлючНастроек = Справочники.КлючНастроек.СоздатьЭлемент();
		НовКлючНастроек.Код = "НастройкаПриЗакрытии";
		НовКлючНастроек.КлючОбъекта = КлючОбъекта;
		НовКлючНастроек.Основная = Истина;
		НовКлючНастроек.Записать();
		
		КлючНастроек = НовКлючНастроек.Ссылка;
	КонецЕсли;		
	
	ОбщиеНастройкиСохранить(КлючОбъекта, КлючНастроек, СтруктураНастроек);	
	
КонецПроцедуры

Процедура ЗагрузитьОсновнуюНастройку(Форма) Экспорт 
	
	Запрос = Новый Запрос("ВЫБРАТЬ
	|	КлючНастроек.Ссылка
	|ИЗ
	|	Справочник.КлючНастроек КАК КлючНастроек
	|ГДЕ
	|	КлючНастроек.Основная
	|	И КлючНастроек.КлючОбъекта = &КлючОбъекта");
	Запрос.УстановитьПараметр("КлючОбъекта", Форма.КлючОбъекта); 
	
	Рез = Запрос.Выполнить().Выбрать();
	
	Если Рез.Следующий() Тогда		
		Форма.ТекНастройка = Рез.Ссылка;
		
		Настройка = ОбщиеНастройкиЗагрузить(Форма.КлючОбъекта, Рез.Ссылка);
		
		Попытка
			ЗагрузитьНастройку(Форма, Настройка);
		Исключение
		КонецПопытки;
	КонецЕсли;
	
КонецПроцедуры

Процедура ЗагрузитьНастройку(Форма, Настройка) Экспорт 
	
	Если ТипЗнч(Настройка) = Тип("Структура") Тогда 
		Если ОбщегоНазначения.ЕстьРеквизитОбъекта(Форма, "Период") И Настройка.Свойство("Период") Тогда 
			Форма.Период = Настройка.Период;
		КонецЕсли;
		
		Если ОбщегоНазначения.ЕстьРеквизитОбъекта(Форма, "Период1") И Настройка.Свойство("Период1") Тогда 
			Форма.Период1 = Настройка.Период1;
		КонецЕсли;
		
		Если ОбщегоНазначения.ЕстьРеквизитОбъекта(Форма, "Период2") И Настройка.Свойство("Период2") Тогда 
			Форма.Период2 = Настройка.Период2;
		КонецЕсли;
		
		Если ОбщегоНазначения.ЕстьРеквизитОбъекта(Форма, "ОтборВалюта") И Настройка.Свойство("ОтборВалюта") Тогда 
			Форма.ОтборВалюта.ЗагрузитьЗначения(Настройка.ОтборВалюта.ВыгрузитьЗначения());
		КонецЕсли;
		
		Если ОбщегоНазначения.ЕстьРеквизитОбъекта(Форма, "ОтборКошелек") И Настройка.Свойство("ОтборКошелек") Тогда 
			Форма.ОтборКошелек.ЗагрузитьЗначения(Настройка.ОтборКошелек.ВыгрузитьЗначения());
		КонецЕсли;
		
		Если ОбщегоНазначения.ЕстьРеквизитОбъекта(Форма, "ОтборМетка") И Настройка.Свойство("ОтборМетка") Тогда 
			Форма.ОтборМетка.ЗагрузитьЗначения(Настройка.ОтборМетка.ВыгрузитьЗначения());
		КонецЕсли;
		
		Если ОбщегоНазначения.ЕстьРеквизитОбъекта(Форма, "ОтборСтатья") И Настройка.Свойство("ОтборСтатья") Тогда 
			Форма.ОтборСтатья.ЗагрузитьЗначения(Настройка.ОтборСтатья.ВыгрузитьЗначения());
		КонецЕсли;
		
		Если ОбщегоНазначения.ЕстьРеквизитОбъекта(Форма, "ОтборТипОперации") И Настройка.Свойство("ОтборТипОперации") Тогда 
			Форма.ОтборТипОперации.ЗагрузитьЗначения(Настройка.ОтборТипОперации.ВыгрузитьЗначения());
		КонецЕсли;
		
		Если ОбщегоНазначения.ЕстьРеквизитОбъекта(Форма, "ОтборФизлицо") И Настройка.Свойство("ОтборФизлицо") Тогда 
			Форма.ОтборФизлицо.ЗагрузитьЗначения(Настройка.ОтборФизлицо.ВыгрузитьЗначения());
		КонецЕсли;
		
		Если ОбщегоНазначения.ЕстьРеквизитОбъекта(Форма, "ОтборСписок") И Настройка.Свойство("ОтборСписок") Тогда 
			Форма.ОтборСписок.ЗагрузитьЗначения(Настройка.ОтборСписок.ВыгрузитьЗначения());
		КонецЕсли;
		
		Если ОбщегоНазначения.ЕстьРеквизитОбъекта(Форма, "ДопОтборСписок") И Настройка.Свойство("ДопОтборСписок") Тогда 
			Форма.ДопОтборСписок.ЗагрузитьЗначения(Настройка.ДопОтборСписок.ВыгрузитьЗначения());
		КонецЕсли;
		
		Если ОбщегоНазначения.ЕстьРеквизитОбъекта(Форма, "ПорядокИтогов") И Настройка.Свойство("ПорядокИтогов") Тогда 
			Для Каждого Стр Из Форма.ПорядокИтогов Цикл
				Поиск = Настройка.ПорядокИтогов.Найти(Стр.Поле, "Поле");
				
				Если Поиск <> Неопределено Тогда 
					Стр.Использование = Поиск.Использование;
				КонецЕсли;
			КонецЦикла;
		КонецЕсли;
	ИначеЕсли ТипЗнч(Настройка) = Тип("НастройкиКомпоновкиДанных") Тогда 
		Форма.АдресНастроекСКД = ПоместитьВоВременноеХранилище(Настройка, Новый УникальныйИдентификатор);
	КонецЕсли;
	
	Попытка
		Форма.ЗагрузитьНастройкуДоп(Настройка);
	Исключение
	КонецПопытки;
	
КонецПроцедуры

Функция СохранитьНастройкуНаСервере(КлючОбъекта, КлючНастроек, ИмяНастройки, СтруктураНастроек) Экспорт 
	
	Если Не ЗначениеЗаполнено(КлючНастроек) Тогда 
		НовКлючНастроек = Справочники.КлючНастроек.СоздатьЭлемент();
		НовКлючНастроек.Код = ИмяНастройки;
		НовКлючНастроек.КлючОбъекта = КлючОбъекта;
		НовКлючНастроек.Записать();
		
		КлючНастроек = НовКлючНастроек.Ссылка;
	Иначе
		КлючНастроекОбъект = КлючНастроек.ПолучитьОбъект();
		КлючНастроекОбъект.Код = ИмяНастройки;
		КлючНастроекОбъект.Записать();
		
		КлючНастроек = КлючНастроекОбъект.Ссылка;
	КонецЕсли;
	
	ОбщиеНастройкиВызовСервера.ОбщиеНастройкиСохранить(КлючОбъекта, КлючНастроек, СтруктураНастроек);
	
	Возврат КлючНастроек;
	
КонецФункции

Функция ЕстьКлючНастроекПоНаименованиюСервер(ИмяНастройки, КлючНастроек) Экспорт 	
	ПоискНастройки = Справочники.КлючНастроек.НайтиПоКоду(ИмяНастройки);
	
	Возврат ЗначениеЗаполнено(ПоискНастройки) И ПоискНастройки <> КлючНастроек;
КонецФункции

Функция СохранитьНастройкуНаСервереПроверкаТекНастройки(ТекНастройка) Экспорт 
	Если ЗначениеЗаполнено(ТекНастройка) И ТекНастройка.ПолучитьОбъект() <> Неопределено Тогда 
		Возврат Истина;
	КонецЕсли;
	
	ТекНастройка = Неопределено;
	
	Возврат Ложь;
КонецФункции

Процедура СохранитьНастройкуОтчетаПриЗакрытии(Форма) Экспорт 
	
	Если ОбщегоНазначенияКлиентСервер.ЕстьРеквизитОбъекта(Форма, "АдресНастроекСКД") Тогда 
		СтруктураНастроек = Форма.АдресНастроекСКД;
	Иначе
		СтруктураНастроек = Форма.ПолучитьСтруктуруНастроекКСохранению();
	КонецЕсли;
	
	ОбщиеНастройкиВызовСервера.ОбщиеНастройкиСохранитьНастройкуОтчетаПриЗакрытии(Форма.КлючОбъекта, СтруктураНастроек);
	
КонецПроцедуры

Процедура НастройкаОтбораПослеИзменения(Форма, Настройка) Экспорт 
	
	Если ОбщегоНазначения.ЕстьРеквизитОбъекта(Форма, "Период") Тогда
		Форма.Период = Настройка.Период;
	КонецЕсли;
	
	Если ОбщегоНазначения.ЕстьРеквизитОбъекта(Форма, "Период1") Тогда 
		Форма.Период1 = Настройка.Период;
	КонецЕсли;
	
	Если ОбщегоНазначения.ЕстьРеквизитОбъекта(Форма, "Период2") Тогда 
		Форма.Период2 = Настройка.Период2;
	КонецЕсли;
	
	Если ОбщегоНазначения.ЕстьРеквизитОбъекта(Форма, "ОтборВалюта") Тогда 
		Форма.ОтборВалюта.ЗагрузитьЗначения(Настройка.ОтборВалюта.ВыгрузитьЗначения());
	КонецЕсли;
	
	Если ОбщегоНазначения.ЕстьРеквизитОбъекта(Форма, "ОтборКошелек") Тогда 
		Форма.ОтборКошелек.ЗагрузитьЗначения(Настройка.ОтборКошелек.ВыгрузитьЗначения());
	КонецЕсли;
	
	Если ОбщегоНазначения.ЕстьРеквизитОбъекта(Форма, "ОтборМетка") Тогда 
		Форма.ОтборМетка.ЗагрузитьЗначения(Настройка.ОтборМетка.ВыгрузитьЗначения());
	КонецЕсли;
	
	Если ОбщегоНазначения.ЕстьРеквизитОбъекта(Форма, "ОтборСтатья") Тогда 
		Форма.ОтборСтатья.ЗагрузитьЗначения(Настройка.ОтборСтатья.ВыгрузитьЗначения());
	КонецЕсли;
	
	Если ОбщегоНазначения.ЕстьРеквизитОбъекта(Форма, "ОтборТипОперации") Тогда 
		Форма.ОтборТипОперации.ЗагрузитьЗначения(Настройка.ОтборТипОперации.ВыгрузитьЗначения());
	КонецЕсли;
	
	Если ОбщегоНазначения.ЕстьРеквизитОбъекта(Форма, "ОтборФизЛицо") Тогда 
		Форма.ОтборФизЛицо.ЗагрузитьЗначения(Настройка.ОтборФизЛицо.ВыгрузитьЗначения());
	КонецЕсли;
	
	Форма.ДиаграммаСформирована = Ложь;			
	Форма.ОтчетСформирован = Ложь;
	
	Попытка
		Форма.ТекУровеньГруппировки = 0;
	Исключение
	КонецПопытки;
	
	Форма.ОбновитьТекущуюСтраницу();
	
КонецПроцедуры

Процедура ВыбратьНастройкуЗавершениеСервер(Форма) Экспорт 
	
	Если ОбщегоНазначения.ЕстьРеквизитОбъекта(Форма, "ОтчетСформирован") Тогда 
		Форма.ОтчетСформирован = Ложь;
	КонецЕсли;
	
	Если ОбщегоНазначения.ЕстьРеквизитОбъекта(Форма, "ДиаграммаСформирована") Тогда 
		Форма.ДиаграммаСформирована = Ложь;
	КонецЕсли;
	
	Настройка = ОбщиеНастройкиВызовСервера.ОбщиеНастройкиЗагрузить(Форма.КлючОбъекта, Форма.ТекНастройка);
	
	ОбщиеНастройкиВызовСервера.ЗагрузитьНастройку(Форма, Настройка);
	
КонецПроцедуры

#КонецОбласти